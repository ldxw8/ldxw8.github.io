<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kofe</title>
  
  <subtitle>Reading / Project / Paper</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.kofes.cn/"/>
  <updated>2018-12-10T08:27:12.212Z</updated>
  <id>http://www.kofes.cn/</id>
  
  <author>
    <name>Kofe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>讲座 | 利用 t-SNE 降维并可视化数据</title>
    <link href="http://www.kofes.cn/2018/11/The-Best-Way-to-Visualize-a-Dataset-Easily.html"/>
    <id>http://www.kofes.cn/2018/11/The-Best-Way-to-Visualize-a-Dataset-Easily.html</id>
    <published>2018-11-21T07:43:57.000Z</published>
    <updated>2018-12-10T08:27:12.212Z</updated>
    
    <content type="html"><![CDATA[<div class="note default"><p>作者：Siraj Raval<br>课堂：The Best Way to Visualize a Dataset Easily | <a href="https://www.bilibili.com/video/av35768109" target="_blank" rel="noopener">Bilibili</a> | <a href="https://www.youtube.com/watch?v=yQsOFWqpjkE" target="_blank" rel="noopener">Youtube</a><br>源码：llSourcell.Visualize_dataset_demo | <a href="https://github.com/llSourcell/visualize_dataset_demo" target="_blank" rel="noopener">Github</a>  </p></div><ul><li><p><code>目标</code>：在本次课堂中，将对人类活动识别 ( Human Activity Recognition，HAR ) 数据集进行数据可视化呈现，并进行探索性分析以发现知识。而本课堂具体目标则是人类活动状态识别，活动状态包括：Sitting-down，Standing-up，Standing，Walking，Sitting。</p><p>  具体地，通过降维方法 <code>t-SNE</code> 实现不同活动状态的数据自动 “分类” ( 更准确地说应该是聚类 )，从而在低维度 ( 二维 ) 下复现数据 ( 的特征 )，以便我们理解数据、统计分析数据。</p></li><li><p><code>问题</code>：若我们要将要描述如此复杂的数据，即它们拥有的特征 ( 维度 ) 过多了，相对于人类大脑只能理解二维或三维的层面，如此复杂数据我们是难以从中发现知识的。</p></li><li><p><code>解决</code>：通过可视化数据来描述它们的特征，具体措施是使用机器学习中的降维方法 <code>T-SNE</code> ( Distributed Stochastic Neighbor Embedding )，把高维空间中的数据以二维或三维的形式表示。</p></li><li><p>HAR 数据集的数据来源：参与者绑上健身追踪设备，当它们运动起来时，追踪设备会记录这些身体指标数据。</p><blockquote><p>关于HAR 数据集更详细的描述请参考：<a href="http://groupware.les.inf.puc-rio.br/har#ixzz4Mt0Teae2" target="_blank" rel="noopener">HAR Set 介绍</a> | <a href="https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv" target="_blank" rel="noopener">HAR Set 下载</a></p></blockquote></li></ul><a id="more"></a><h2 id="观察数据"><a href="#观察数据" class="headerlink" title="观察数据"></a>观察数据</h2><ul><li>每一行数据代表不同的人。</li><li>每一列代表某人的身体指标测量数据，如手臂或者前臂的空间位置 ( x，y，z 坐标 )。</li><li>在人类活动识别数据集中，每一行 ( 实体 ) 都有类标签标记。且共有 5 种标签：Sitting-down，Standing-up，Standing，Walking，Sitting。</li></ul><h2 id="预处理数据"><a href="#预处理数据" class="headerlink" title="预处理数据"></a>预处理数据</h2><blockquote><p>关于 <code>预处理数据</code> 的详细解释，可参考另外一篇文章：<a href="https://www.kofes.cn/2018/11/the-best-way-to-prepare-a-dataset-easily.html">Kofe. 如何轻松有效地预处理数据</a></p></blockquote><ul><li><p><code>数据清洗</code>：缺失值处理、光滑噪声数据、识别和删除离群点。</p><blockquote><p>关于数据清洗，也推荐阅读具有实操意义的一篇博文：<a href="https://towardsdatascience.com/how-to-handle-missing-data-8646b18db0d4" target="_blank" rel="noopener">TowardsDataScience. How to Handle Missing Data</a></p></blockquote></li><li><p><code>数据集成</code>：多个数据源的数据合并，存放于同一个数据仓库中。</p><ul><li><code>实体识别问题</code>：来自多个信息源，各数据源中的实体之间如何匹配，这涉及实体识别问题。如不同数据来源于不同数据库中，现实意义上它们是同一实体，但它们属性的元数据表达却不同 ( 如主键 )。</li><li><code>冗余和相关分析</code>：集成多个数据源，数据中可能有多组属性重复存在。而冗余可被相关分析检测到，如分类 ( 标称 ) 属性的卡方检验、数值属性的相关系数、数值属性的方差和协方差。</li><li><code>元组重复</code>：元组级检测重复。</li></ul></li><li><p><code>数据归约</code>：在尽可能保持数据原貌前提下，最大限度精简数据量。策略包括：</p><ul><li><code>维归约</code>：也称为特征归约，减少所考虑的属性的个数。方法包括：小波变换、主成分分析、属性子集选择等。当然利用冗余和相关分析也是可行的。</li><li><p><code>数量归约</code>：用替代的、较小的数据表示形式替换原数据。方法包括：回归和对数线性模型、聚类、降维等。</p><blockquote><p>在本课堂中则使用了降维方法进行属性数量的归约，其中降维方法有：PCA、t-SNE $^{[4]}$、LargeVis $^{[5, 6]}$ 等。</p></blockquote></li></ul></li><li><p><code>数据变换</code>：主要思想是将数据变换或统一成适合数据挖掘的形式。方法可以是数据归一化、数据离散化、概念分层等。</p><ul><li><code>特征构造</code>：由给定的属性构造新的属性并添加至属性集中。</li><li><code>聚集分解</code>：对数据进行 <code>汇总</code> 或者 <code>聚集</code>。如聚集季度销售数据。与之相对的是 <code>分解</code>，如常见的 “日期” 属性，不同的需求，我们要解构的粒度是不同的。如预测当日的气温变化，则我们可把年和月份剔除。</li><li><code>归一化</code>：针对每一个特征 ( 维度 )，去均值和方差归一化。即把属性数据按比例缩放，让所有特征在统一数量级上运作，如此一来数据指标之间就有了可比性。</li><li><p><code>离散化</code>：数值属性的原始值用区间标签或者概念标签替换，即这些标签可递归地组织成更高层概念，导致数值属性的 <code>概念分层</code>。</p><blockquote><p>例如，我们    对年龄进行分层：1 to 17 为 Adolescent；18 to 45 为 Adult；46 以上为 Senior。</p></blockquote></li></ul></li></ul><h2 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h2><h3 id="降维方法"><a href="#降维方法" class="headerlink" title="降维方法"></a>降维方法</h3><h4 id="降维目的"><a href="#降维目的" class="headerlink" title="降维目的"></a>降维目的</h4><ul><li>通过降维算法来寻找 <code>数据内部的本质结构特征</code>，如特征选择或特征提取。<ul><li><code>特征选择</code>：假定数据中包含大量冗余或无关变量 ( 或称特征、属性、指标等 )，旨在从原有变量中找出主要变量。其代表方法为 <a href="https://zh.wikipedia.org/wiki/Lasso%E7%AE%97%E6%B3%95" target="_blank" rel="noopener">LASSO</a>。</li><li><code>特征提取</code>：是将高维数据转化为低维数据的过程。在此过程中可能舍弃原有数据、创造新的变量。其代表方法为 <a href="https://zh.wikipedia.org/wiki/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90" target="_blank" rel="noopener">PCA</a>。</li></ul></li><li>在原始的高维空间中，包含有冗余信息、噪音信息。通过降维方法，<code>减少冗余信息</code> 所造成的误差，以提高模型的精度。</li></ul><h4 id="降维本质"><a href="#降维本质" class="headerlink" title="降维本质"></a>降维本质</h4><ul><li>机器学习领域中，降维指采用某种映射方法将原高维空间中的数据点映射到低维度的空间中。</li><li>降维的本质是学习一个映射函数 $ f : x \to y$，其中 $x$ 是原始数据点的表达，$y$ 是数据点映射后的低维向量表达 ( 通常 $y$ 的维度小于 $x$ 的维度 )。$f$ 可能是显式的或隐式的、线性的或非线性的映射函数 ( 例如本例提及的 PCA 或者 t-SNE )。</li><li>当我们意识到需要降维时，一般是发现了特征间的高度线性相关，而 t-SNE 主打的是非线性降维；若我们发现了线性相关，则适合使用 PCA 处理 $^{[1]}$。</li></ul><h4 id="降维算法"><a href="#降维算法" class="headerlink" title="降维算法"></a>降维算法</h4><h5 id="PCA"><a href="#PCA" class="headerlink" title="PCA"></a>PCA</h5><ul><li><code>PCA</code>：主成分分析算法 ( Principal Component Analysis，PCA )，是最常用的 <code>线性降维方法</code>。它通过某种线性投影，将高维的数据映射到低维的空间中表示。为使所有样本的投影点尽可能分开，则需要在所投影的维度上数据的方差最大化。以此，使用较少的数据维度，同时保留住较多的原数据点的特性。</li></ul><h5 id="SNE"><a href="#SNE" class="headerlink" title="SNE"></a>SNE</h5><ul><li><p><code>t-SNE</code> 可理解为 <code>SNE</code> 的特殊形式，我们先了解 SNE 的基本原理，再延伸学习 t-SNE ( 本小节可参考多篇博文比对学习，如参考资料中的 [2] - [3] )。</p></li><li><p>SNE 是通过 <a href="https://www.zhihu.com/question/20666664" target="_blank" rel="noopener">仿射变换</a> 将数据点映射到概率分布上，主要包括两个步骤：</p><ul><li><p>SNE 构建一个高维对象之间的概率分布，使得相似的对象有更高的概率被选择，而不相似的对象有较低的概率被选择。</p></li><li><p>SNE在低维空间里在构建这些点的概率分布，使之与高维度的概率分布之间尽可能相似。</p></li></ul></li><li><p>SNE 的实现原理：</p><ul><li><p>原始 SNE 先将 <code>欧几里得距离</code> 转换为 <code>条件概率</code> 来表达点与点之间的相似度。具体地，给定一个 $N$ 个高维的数据 $x_1, x_2, …, x_N$，$x_i$ 和 $x_j$ 之间的相似度可表示为 ( $x_i$ 为中心点 )： </p><script type="math/tex; mode=display">  p_{j|i} = \frac{      exp({-||x^{(i)} - x^{(j)}||}^2 / {      2\sigma_i^2})  }{       \sum_{k \neq i} exp({-||x^{(i)} - x^{(k)}||}^2 / {      2\sigma_i^2})  }  \tag{1}</script><p>  这里的有一个参数是 $\sigma_i$，其表示以 $x_i$ 为中心点的高斯分布的方差。且对于不同的点 $x_i$ 取值不一样 $^{[2]}$ ( 具体参详 SNE 的困惑度 ( Perplexity ) )。再者，由于我们只关心不同点两两之间的相似度，所以设定 $p_{i|i} = 0$。</p></li><li><p>在把数据映射到低维空间后，高维数据点之间的相似性也应该在低维空间的数据点上体现出来。这里同样用条件概率的形式描述，对于低维度下的 $y_i$，我们可以指定高斯分布为方差为 $\frac{1}{\sqrt2}$。因此它们之间的相似度为:</p><script type="math/tex; mode=display">q_{j|i} = \frac{  exp( {-||y^{(i)} - y^{(j)}||}^2 )}{   \sum_{k \neq i} exp( {-||y^{(i)} - y^{(k)}||}^2 )}\tag{2}</script></li><li><p>同理，设定 $q_{i|i} = 0$。这样一来，若 $y_i$ 和 $y_j$ 真实反映了高维数据点 $x_i$ 和 $x_j$ 之间的关系，那么条件概率 $p_{j|i}$ 与 $q_{j|i}$ 应该完全相等。</p><p>  这里我们只考虑 $x_i$ 与 $x_j$ 之间的条件概率，则它们可构成一个条件概率分布函数 $P$。同理，只考虑 $y_i$ 与 $y_j$ 之间的条件概率，在低维空间存在一个条件概率分布 $Q$，且应该与 $P$ 是一致的。</p><p>  如何衡量两个分布之间的相似性？则我们可通过优化两分布的距离，即 <code>K-L 散度</code> ( Kullback-Leibler Divergence )。SNE 最终目标就是对所有数据点最小化这个 K-L 散度，具体地，我们可使用 <code>梯度下降算法</code> 最小化以下代价函数：</p><script type="math/tex; mode=display">  C = D_{KL}(P || Q) = \sum_{i} \sum_{j} p_{j|i} log \frac{p_{j|i}}{q_{j|i}}  \tag{3}</script><p>  SNE 代价函数对 $y_i$ 求梯度后的形式如下：</p><script type="math/tex; mode=display">  \frac{\delta C}{\delta y_i} =   2 \sum_j ( p_{j|i} - q_{j|i} + p_{i|j} - q_{i|j} )( y_i - y_j )  \tag{4}</script></li><li><p>似乎到这里问题就解决了，得到代价函数，利用梯度下降算法进行训练了。但事情远没有那么简单，因为 K-L 散度是一个非对称的度量，最小化代价函数的目的是让 $pj|i$ 和 $qj|i$ 的值尽可能的接近，即低维空间中点的相似性应当与高维空间中点的相似性一致。</p><ul><li>但从代价函数的形式就可以看出，考虑到离群点的情况，当 $p_{j|i}$ 较大，$q_{j|i}$ 较小时，即高维空间中两个数据点距离较近，而映射到低维空间后距离较远，那么将得到一个很高的惩罚，这没什么问题；</li><li>而$p_{j|i}$ 较小，$q_{j|i}$ 较大时，即高维空间中两个数据点距离较远，而映射到低维空间距离较近，将得到一个很低的惩罚值。然而这就是问题所在，理应得到一个较高的惩罚才对。换句话说，SNE 的代价函数更关注局部结构，而忽视了全局结构。</li></ul></li></ul></li></ul><h5 id="t-SNE"><a href="#t-SNE" class="headerlink" title="t-SNE"></a>t-SNE</h5><ul><li><p>在原始 SNE 中，$p_{i|j}$ 与 $p_{j|i}$ 是不相等的，低维空间中 $q_{i|j}$ 与 $q_{j|i}$ 也是不相等的。若我们分别在高维和低维空间构造更加通用的联合概率分布 $P$ 和 $Q$，使得对任意 i, j，均有 $p_{i|j} = p_{j|i}, \, q_{i|j} = q_{j|i}$。而这种 SNE 称之为对称 SNE ( Symmetric SNE )，因此它们的概率分布可改写为 ( 同理，我们只关注不同点两两之间的相似性，故设定 $p_{i||i} = 0, q_{i||i} = 0$ ):</p><script type="math/tex; mode=display">  p_{i, j} = \frac{          exp({-||x^{(i)} - x^{(j)}||}^2 / {          2\sigma_i^2})      }{           \sum_{k \neq l} exp({-||x^{(k)} - x^{(l)}||}^2 / {          2\sigma_i^2})      } \\  q_{i, j} = \frac{      exp( {-||y^{(i)} - y^{(j)}||}^2 )  }{       \sum_{k \neq l} exp( {-||y^{(k)} - y^{(l)}||}^2 )  }  \tag{5}</script></li><li><p>这样表达方式使得整体简洁了很多。但是会引入异常值的问题。比如，$x_i$ 是异常值，那么 $||x^{(i)} - x^{(j)}||^2$ 会很大，对应的所有的 $j$, $p_{i, j}$ 都会很小，导致低维映射下的 $y_i$ 无论处在什么位置，对代价函数影响很小。</p><p>  为了解决这个问题，我们将联合概率分布改写为：</p><script type="math/tex; mode=display">  p_{i,j} = \frac{      p_{j|i} + p_{i|j}   }{2N} \\  ( p_{j|i} = \frac{p_{i,j}}{p_i}, \,  p_{i|j} = \frac{p_{i,j}}{p_j}, \,  p_i = p_j = \frac1N )  \tag{6}</script></li><li><p>其中 N 为数据点的总数，这样定义即满足了对称性，又保证了 $x_i$ 的惩罚值不会过小。此时可以利用 KL 距离写出如下代价函数：</p><script type="math/tex; mode=display">  C = D_{KL}(P || Q) = \sum_{i} \sum_{j} p_{i, j} log \frac{p_{i, j}}{q_{i, j}}  \tag{7}</script></li><li><p>对称 SNE 的最大优点，即梯度计算变得简单了：</p><script type="math/tex; mode=display">  \frac{\delta C}{\delta y_i} =   4 \sum_j ( p_{i, j} - q_{i, j})( y_i - y_j )  \tag{8}</script><p>  但是Maaten 还指出 $^{[4]}$，对称 SNE 的效果只是略微优于原始 SNE 的效果，依然没有从根本上解决问题。我们还需要解决 <code>拥挤问题</code>。</p></li><li><p><code>拥挤问题</code>：就是说各个簇聚集在一起，无法区分。这是由于高维空间距离分布和低维空间距离分布的差异造成的。比如，有一高维度数据在降维到 10 维下可以有很好的表达，但是降维到两维后无法得到 “可信” 映射。</p><p>  进一步说明，假设一个以数据点 $x_i$ 为中心，半径为 $r$ 的 $m$ 维球 ( 三维空间就是球 )，其体积是按 $r^m$ 增长的，假设数据点是在 m 维球中均匀分布的，我们来看看其他数据点与 $x_i$ 的距离随维度增大而产生的变化。具体，我们可参考代码 $^{[3]}$：</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> numpy.linalg <span class="keyword">import</span> norm</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">npoints = <span class="number">1000</span><span class="comment"># 抽取 1000 个 m 维球内均匀分布的点</span></span><br><span class="line">plt.figure( figsize=(<span class="number">20</span>, <span class="number">4</span>) )</span><br><span class="line"><span class="keyword">for</span> i, m <span class="keyword">in</span> enumerate((<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>)):</span><br><span class="line">    <span class="comment"># 这里模拟 m 维球中的均匀分布用到了拒绝采样</span></span><br><span class="line">    <span class="comment"># 即先生成 m 维立方中的均匀分布，再剔除 m 维球外部的点</span></span><br><span class="line">    accepts = []</span><br><span class="line">    <span class="keyword">while</span> len(accepts) &lt; <span class="number">1000</span>:</span><br><span class="line">        points = np.random.rand(<span class="number">500</span>, m)</span><br><span class="line">        accepts.extend(</span><br><span class="line">            [d <span class="keyword">for</span> d <span class="keyword">in</span> norm(points, axis=<span class="number">1</span>) <span class="keyword">if</span> d &lt;= <span class="number">1.0</span>]</span><br><span class="line">        ) <span class="comment"># 拒绝采样</span></span><br><span class="line">    accepts = accepts[:npoints]</span><br><span class="line">    ax = plt.subplot(<span class="number">1</span>, <span class="number">4</span>, i+<span class="number">1</span>)</span><br><span class="line">    ax.set_xlabel(<span class="string">'distance'</span>) <span class="comment"># x 轴表示点到圆心的距离</span></span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">        ax.set_ylabel(<span class="string">'count'</span>) <span class="comment"># y 轴表示点的数量</span></span><br><span class="line">    ax.hist(accepts, bins=np.linspace(<span class="number">0.</span>, <span class="number">1.</span>, <span class="number">50</span>), color=<span class="string">'green'</span>)</span><br><span class="line">    ax.set_title(<span class="string">'m=&#123;0&#125;'</span>.format(str(m)), loc=<span class="string">'left'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></li><li><p>运行结果如图 2-1 所示。据图示反映，随着维度的增大，大部分数据点都聚集在 m 维球的表面附近，与点 $x_i$ 的距离分布极不均衡。若直接将这种距离关系保留到低维，肯定会出现拥挤问题。如何解决呢？这个时候就需要请出 $\tau$ 分布了。</p><p>  <img src="/images/illustration/Project/2018/11/The-Best-Way-to-Visualize-a-Dataset-Easily_2-1.jpg" alt="图2-1半径为 r 的 m 维球上的数据分布"></p>  <center>图 2-1 半径为 r 的 m 维球上的数据分布</center></li><li><p>减轻 <code>拥挤问题</code> 的方法：在高维空间下我们使用 <code>高斯分布</code> 将距离转换为概率分布；在低维空间下，我们使用更加 <code>偏重长尾分布</code> 的方式来将距离转换为概率分布，使得高维度下中低等的距离在映射后能够有一个较大的距离。使用了自由度为 1 的 $\tau$ 分布之后的 $q$ 变化，如下:</p><script type="math/tex; mode=display">  q_{i,j} = \frac{      (1 + ||y^{(i)} - y^{(j)}||^2)^{-1}  }{       \sum_{k \neq l} (1 + ||y^{(k)} - y^{(l)}||^2)^{-1}  }  \tag{9}</script><p>  依然用 K-L 距离衡量两个分布之间的相似性，此时梯度变为：</p><script type="math/tex; mode=display">  \frac{\delta C}{\delta y_i} =   4 \sum_j ( p_{i, j} - q_{i, j})( y_i - y_j )(1 + ||y^{(i)} - y^{(j)}||^2)^{-1}  \tag{10}</script></li><li><p><code>总结</code>：综上所述，从不对称的 SNE 算法到 t-SNE 算法，所做的改进工作：</p><ul><li>把 SNE 变为对称 SNE；</li><li>在低维空间中采用了 $\tau$ 分布代替原来的高斯分布，高维空间不变。</li><li><p>具体算法步骤可参考了文章 [7] 的 <a href="https://zhuanlan.zhihu.com/p/33722444" target="_blank" rel="noopener">t-SNE</a> 图文解释，如图 2-2 所示。</p><p><img src="/images/illustration/Project/2018/11/The-Best-Way-to-Visualize-a-Dataset-Easily_2-2.jpg" alt="图2-2t-SNE的算法步骤"></p><center>图 2-2 t-SNE 的算法步骤</center></li></ul></li></ul><h3 id="数据展示"><a href="#数据展示" class="headerlink" title="数据展示"></a>数据展示</h3><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li>[1] <a href="https://www.zhihu.com/question/52022955/answer/387753267" target="_blank" rel="noopener">微调. t-SNE 数据可视化算法的作用是为了降维还是认识数据. zhihu.com</a></li><li>[2] <a href="http://www.datakit.cn/blog/2017/02/05/t_sne_full.html#12-sne原理推导" target="_blank" rel="noopener">Chrispher. t-SNE 完整笔记 [OL]. datakit.cn. 2017</a></li><li>[3] <a href="http://bindog.github.io/blog/2016/06/04/from-sne-to-tsne-to-largevis/" target="_blank" rel="noopener">Bindog. 从 SNE 到 t-SNE 再到 LargeVis. bindog.github.io. 2016</a></li><li>[4] Maaten L, Hinton G. Visualizing data using t-SNE [J]. Journal of machine learning r/esearch, 2008, 9(Nov): 2579-2605.</li><li>[5] Tang J, Liu J, Zhang M, et al. Visualizing large-scale and high-dimensional data[C]. International World Wide Web Conferences Steering Committee, 2016: 287-297.</li><li>[6] Tang J, Qu M, Wang M, et al. Line: Large-scale information network embedding[C]. International World Wide Web Conferences Steering Committee, 2015: 1067-1077.</li><li>[7] <a href="https://zhuanlan.zhihu.com/p/33722444" target="_blank" rel="noopener">徐小贱民. 降维技术解析：PCA, t-SNE and Auto Encoders. zhihu.com</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note default&quot;&gt;&lt;p&gt;作者：Siraj Raval&lt;br&gt;课堂：The Best Way to Visualize a Dataset Easily | &lt;a href=&quot;https://www.bilibili.com/video/av35768109&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Bilibili&lt;/a&gt; | &lt;a href=&quot;https://www.youtube.com/watch?v=yQsOFWqpjkE&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Youtube&lt;/a&gt;&lt;br&gt;源码：llSourcell.Visualize_dataset_demo | &lt;a href=&quot;https://github.com/llSourcell/visualize_dataset_demo&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github&lt;/a&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;目标&lt;/code&gt;：在本次课堂中，将对人类活动识别 ( Human Activity Recognition，HAR ) 数据集进行数据可视化呈现，并进行探索性分析以发现知识。而本课堂具体目标则是人类活动状态识别，活动状态包括：Sitting-down，Standing-up，Standing，Walking，Sitting。&lt;/p&gt;
&lt;p&gt;  具体地，通过降维方法 &lt;code&gt;t-SNE&lt;/code&gt; 实现不同活动状态的数据自动 “分类” ( 更准确地说应该是聚类 )，从而在低维度 ( 二维 ) 下复现数据 ( 的特征 )，以便我们理解数据、统计分析数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;问题&lt;/code&gt;：若我们要将要描述如此复杂的数据，即它们拥有的特征 ( 维度 ) 过多了，相对于人类大脑只能理解二维或三维的层面，如此复杂数据我们是难以从中发现知识的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;解决&lt;/code&gt;：通过可视化数据来描述它们的特征，具体措施是使用机器学习中的降维方法 &lt;code&gt;T-SNE&lt;/code&gt; ( Distributed Stochastic Neighbor Embedding )，把高维空间中的数据以二维或三维的形式表示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HAR 数据集的数据来源：参与者绑上健身追踪设备，当它们运动起来时，追踪设备会记录这些身体指标数据。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关于HAR 数据集更详细的描述请参考：&lt;a href=&quot;http://groupware.les.inf.puc-rio.br/har#ixzz4Mt0Teae2&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HAR Set 介绍&lt;/a&gt; | &lt;a href=&quot;https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HAR Set 下载&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Project" scheme="http://www.kofes.cn/categories/Project/"/>
    
    
      <category term="数据挖掘" scheme="http://www.kofes.cn/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
      <category term="Kaggle" scheme="http://www.kofes.cn/tags/Kaggle/"/>
    
      <category term="数据可视化" scheme="http://www.kofes.cn/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="t-SNE" scheme="http://www.kofes.cn/tags/t-SNE/"/>
    
  </entry>
  
  <entry>
    <title>讲座 | 如何轻松有效地预处理数据</title>
    <link href="http://www.kofes.cn/2018/11/the-best-way-to-prepare-a-dataset-easily.html"/>
    <id>http://www.kofes.cn/2018/11/the-best-way-to-prepare-a-dataset-easily.html</id>
    <published>2018-11-07T15:20:37.000Z</published>
    <updated>2018-12-05T01:12:16.555Z</updated>
    
    <content type="html"><![CDATA[<div class="note default"><p>作者：Siraj Raval<br>课堂：The Best Way to Prepare a Dataset Easily | <a href="https://www.bilibili.com/video/av35419601" target="_blank" rel="noopener">Bilibili</a> | <a href="https://www.youtube.com/watch?v=0xVqLJe9_CY" target="_blank" rel="noopener">Youtube</a><br>源码：llSourcell.Prepare dataset challenge | <a href="https://github.com/llSourcell/prepare_dataset_challenge" target="_blank" rel="noopener">Github</a>  </p></div><p>本课堂的核心是讲述数据分析前夕的数据预处理过程，包括准备数据阶段和处理数据阶段。再具体以实例：通过大脑扫描公共数据集来建模、分析，预测某人是否在冥想。</p><a id="more"></a><h2 id="更新进度"><a href="#更新进度" class="headerlink" title="更新进度"></a>更新进度</h2><ul><li>2018.11.20：重新整理「数据预处理」章节，细化了预处理的细节，且重新整理了预处理的结构；</li></ul><h2 id="准备数据"><a href="#准备数据" class="headerlink" title="准备数据"></a>准备数据</h2><ul><li><code>准备数据阶段</code>：决定使用何种数据，这跟你试图解决的问题相关。</li><li><code>关于数据来源</code>：能使用公共数据集解决的问题，尽量使用公共数据集。若公共数据集无法满足你的需求，引用毛主席的老话：没有条件便自己创造条件。即我们通过网络爬虫形式，把原始网页中的数据扒取下来，自己来 “创造” 数据集。<ul><li><code>公共数据集</code>：<a href="https://www.google.com/advanced_search?hl=zh-CN&amp;fg=1" target="_blank" rel="noopener">Google 高级搜索</a>、<a href="https://www.kaggle.com/" target="_blank" rel="noopener">Kaggle</a>。</li><li><code>网络爬虫</code>：网站提供 API 接口、Python 扒取网页数据。</li></ul></li></ul><h3 id="公共数据集"><a href="#公共数据集" class="headerlink" title="公共数据集"></a>公共数据集</h3><h4 id="谷歌高级搜索"><a href="#谷歌高级搜索" class="headerlink" title="谷歌高级搜索"></a>谷歌高级搜索</h4><ul><li><code>官方网址</code>：<a href="https://www.google.com/advanced_search?hl=zh-CN&amp;fg=1" target="_blank" rel="noopener">Google 高级搜索</a></li><li><code>使用方式</code>：顾名思义，即通过高级搜索的限制条件去获得更精确的搜索结果。具体地，我们侧重关注以下检索项，可获得意想不到的效果。<ul><li><code>关键字部分</code>：填写问题相关的关键词；</li><li><code>网站或域名</code>：填写 <code>.edu</code>、<code>.gov</code>、<code>.org</code> 等，即为确保数据的权威可靠性，尽可能从教育、政府、组织机构中获取公共数据集；</li><li><code>文件类型</code>：可指定为 csv ( 逗号分隔值 )、xls ( Microsoft Excel ) 等文件类型，Python 对 csv、xls 提供了较好的库支持，为了更便捷进行数据处理，则优先选择此类格式的文件。</li></ul></li></ul><h4 id="Kaggle"><a href="#Kaggle" class="headerlink" title="Kaggle"></a>Kaggle</h4><ul><li><code>官方网址</code>：<a href="https://www.kaggle.com/" target="_blank" rel="noopener">Kaggle</a></li><li><p><code>推荐理由</code>：Kaggle 由 Anthony Goldbloom 创立，主要为开发商和数据科学家提供举办机器学习竞赛、托管数据库、编写和分享代码的平台 ( <a href="http://blog.kaggle.com/2017/03/08/kaggle-joins-google-cloud/" target="_blank" rel="noopener">与谷歌达成合作关系</a> )。由此可见：</p><ul><li>Kaggle 的每个竞赛都是独立的，无需设置项目范围然后收集数据，这让你有时间专注其它技能。</li><li><p>Kaggle 的每个数据集都有要解决的现实问题，要面向参与竞赛的人群，让参赛者更容易掌握业务知识和数据集的结构特征，因此数据集的描述是不可缺少的。</p><blockquote><p>不妨体验下 Kaggle 社区提供的入门案例 <code>泰坦尼克：灾难中的机器学习</code>，其相关的数据集描述：<a href="https://www.kaggle.com/c/titanic/data" target="_blank" rel="noopener">Titanic: Machine Learning from Disaster</a></p></blockquote></li></ul></li><li><p><code>入门指南</code>：参考文章 <a href="https://www.zhihu.com/question/23987009" target="_blank" rel="noopener">机器之心. Kaggle 如何入门. zhihu.com</a> 整理而得。</p><ul><li><p><code>选择一种编程语言</code>：你是一个毫无经验的新手，推荐 <code>Python</code>，因这是一种通用编程语言，你可以在整个流程中都使用它。</p></li><li><p><code>学习探索数据的基础</code>：加载、浏览和绘制你的数据（<code>即探索性分析</code>）的能力，因为它可以为你将在模型训练过程中做的各种决策提供信息。  </p><p>  若你选择了 Python 路线，推荐使用专门为这个目的设计的 <code>Seaborn</code> 库。其中有高层面的绘图函数，可以绘制许多最常见和有用的图表。可参考资料：</p><ul><li><p><a href="https://seaborn.pydata.org/" target="_blank" rel="noopener">Seaborn 官网</a></p></li><li><p><a href="https://elitedatascience.com/python-seaborn-tutorial" target="_blank" rel="noopener">Seaborn 教程. EliteDataScience.com</a></p></li><li><p><a href="https://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;mid=2650726730&amp;idx=2&amp;sn=89d176a782875afaafc69dd40cbee006&amp;chksm=871b2534b06cac22a9235168a8d8867b97f795d2fba4435a2c7ec18b1039703903e4a79560bd&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">机器之心. 数据科学相关的 Python 库介绍</a></p></li></ul></li><li><p><code>训练你的第一个机器学习模型</code>：将数据集分成独立的训练集和测试集，交叉验证避免过拟合以及使用合适的表现评价指标。对于 Python，最好的通用机器学习库是 Scikit-Learn。可参考资料：</p><ul><li><p><a href="https://link.zhihu.com/?target=http%3A//scikit-learn.org/stable/" target="_blank" rel="noopener">Scikit-Learn 官网</a></p></li><li><p><a href="https://elitedatascience.com/python-machine-learning-tutorial-scikit-learn" target="_blank" rel="noopener">Scikit-Learn 教程. EliteDataScience.com</a></p></li><li><p><a href="https://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;mid=2650724242&amp;idx=1&amp;sn=703d242700e29813d6c482daf6b211c5&amp;chksm=871b13ecb06c9afa28f8aad729496620078985e4eae8a1296fc407dbd70c1d70fabb3b2817fa&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">机器之心. 从零开始掌握 Python 机器学习</a></p></li><li><p><a href="https://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;mid=2650725654&amp;idx=4&amp;sn=505ababb07a6bee5d42a6254a7493a7e&amp;chksm=871b1968b06c907e9f84888ecb2ced8d3f52f0129720872e97f923b94deb34383eacefb4a5cf&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Ben Hamner (Kaggle CTO). 机器学习的八个步骤</a></p></li></ul></li><li><p><code>解决入门级竞赛</code>：<a href="https://www.kaggle.com/competitions?sortBy=grouped&amp;group=general&amp;page=1&amp;pageSize=20&amp;category=gettingStarted" target="_blank" rel="noopener">Getting Started</a> 竞赛非常适合初学者，因为它们给你提供了低风险的学习环境，并且还有很多社区创造的教程。</p><blockquote><p>Kaggle 的竞赛分成四个类别：<br><code>Featured</code>：通常是由公司、组织甚至政府赞助的，奖金池最大。<br><code>Research</code>：研究方向的竞赛，只有很少或没有奖金。它们也有非传统的提交流程。<br><code>Recruitment</code>：这些是由想要招聘数据科学家的公司赞助的。目前仍然相对少见。<br><code>Getting Started</code>：这些竞赛的结构和 Featured 竞赛类似，但没有奖金。它们有更简单的数据集、大量教程和滚动的提交窗口让你可以随时输入。</p></blockquote></li></ul></li></ul><h3 id="网络爬虫"><a href="#网络爬虫" class="headerlink" title="网络爬虫"></a>网络爬虫</h3><h4 id="网站-API"><a href="#网站-API" class="headerlink" title="网站 API"></a>网站 API</h4><ul><li>当公共数据集无法满足我们的需求时，则需要自定义采集数据。而采集数据则通过网络爬虫实现。值得注意的是，并不是所有的网页，都需要我们花费大功夫去扒取获得，而是它们本身就提供了调用数据的 API。</li><li>当然，也有 Github 大神搜集并整理了较实用的 API：<a href="https://github.com/TonnyL/Awesome_APIs/blob/master/README-zh.md" target="_blank" rel="noopener">TonnyL. Awesome APIs</a></li></ul><h4 id="网页爬虫"><a href="#网页爬虫" class="headerlink" title="网页爬虫"></a>网页爬虫</h4><ul><li><a href="https://www.crummy.com/software/BeautifulSoup/" target="_blank" rel="noopener">Beautiful Soup</a>：Beautiful Soup 是一个可以从 HTML 或 XML 文件中提取数据的 <code>Python</code> 库。</li><li><a href="http://webmagic.io/" target="_blank" rel="noopener">Web Magic</a>：Web Magic 是一个简单灵活的 <code>Java</code> 爬虫框架。基于 WebMagic，你可以快速开发出一个高效、易维护的爬虫。</li></ul><h2 id="处理数据"><a href="#处理数据" class="headerlink" title="处理数据"></a>处理数据</h2><ul><li><p>为什么要对数据预处理：确保数据质量，以保证预测的结果更精确。而数据质量涉及许多因素，例如准确性、完整性、一致性、可信性和可解释性，针对不同的特性，都有对应的 <code>处理策略</code>。</p><blockquote><p>注意，数据预处理的主要任务之间存在许多重叠工作，若前面章节有阐述的，后面涉及的则略过。</p></blockquote></li><li><p>数据预处理的主要任务：</p><ul><li><p><code>数据清洗</code>：缺失值处理、光滑噪声数据、识别和删除离群点。</p><blockquote><p>关于数据清洗，也推荐阅读具有实操意义的一篇博文：<a href="https://towardsdatascience.com/how-to-handle-missing-data-8646b18db0d4" target="_blank" rel="noopener">TowardsDataScience. How to Handle Missing Data</a></p></blockquote></li><li><p><code>数据集成</code>：多个数据源的数据合并，存放于同一个数据仓库中。</p><ul><li><code>实体识别问题</code>：来自多个信息源，各数据源中的实体之间如何匹配，这涉及实体识别问题。如不同数据来源于不同数据库中，现实意义上它们是同一实体，但它们属性的元数据表达却不同 ( 如主键 )。</li><li><code>冗余和相关分析</code>：集成多个数据源，数据中可能有多组属性重复存在。而冗余可被相关分析检测到，如针对分类 ( 标称 ) 属性的卡方检验、数值属性的相关系数、数值属性的方差和协方差。</li><li><code>元组重复</code>：元组级检测重复。</li></ul></li><li><code>数据归约</code>：在尽可能保持数据原貌前提下，最大限度精简数据量。策略包括：<ul><li><code>维归约</code>：也称为特征归约，减少所考虑的属性的个数。方法包括：小波变换、主成分分析、属性子集选择等。当然利用冗余和相关分析也是可行的。</li><li><code>数量归约</code>：用替代的、较小的数据表示形式替换原数据。方法包括：回归和对数-线性模型、聚类、降维等。</li></ul></li><li><p><code>数据变换</code>：主要思想是将数据变换或统一成适合数据挖掘的形式。方法可以是数据归一化、数据离散化、概念分层等。</p><ul><li><code>特征构造</code>：由给定的属性构造新的属性并添加至属性集中。</li><li><code>聚集分解</code>：对数据进行 <code>汇总</code> 或者 <code>聚集</code>。如聚集日销售数据。与之相对的是 <code>分解</code>，如常见的 “日期” 属性，不同的需求，我们要解构的粒度是不同的。如预测当日的气温变化，则我们可把年和月份剔除。</li><li><code>归一化</code>：针对每一个特征 ( 维度 )，去均值和方差归一化。即把属性数据按比例缩放，让所有特征在统一数量级上运作，如此一来数据指标之间就有了可比性。</li><li><p><code>离散化</code>：把属性值的原始值用区间标签或者概念标签替换，即这些标签可递归地组织成更高层概念，导致数值属性的 <code>概念分层</code>。</p><blockquote><p>例如，我们    对年龄进行分层：1 to 17 为 Adolescent；18 to 45 为 Adult；46 以上为 Senior。</p></blockquote></li></ul></li></ul></li></ul><h3 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h3><ul><li><p><code>缺失值处理</code>：某些实例数据中属性值为空，我们通过遍历数据集将其剔除。若数据集中存在大量实例含有缺失值的情况，则我们采用 <code>填补缺失值</code> 的方法。值得注意的是，根据不同情况，填补缺失值有多种方式：</p><ul><li>人工填写缺失值。</li><li>使用全局常量填充缺失值：<code>N/A</code> 或者 $\infty $。</li><li>使用属性的中心度量：若是对称的数据分布，则使用均值；若是倾斜的数据分布，则使用中位数。</li><li><p>使用最可能的值填充缺失值：回归、贝叶斯形式化的推理工具或决策树。</p><blockquote><p>某些情况下，缺失值并不意味数据有错误。例如在申请信用卡时，要求填写申请人的驾驶执照号，没有的人可填写 “无” 或者不填。</p></blockquote></li></ul></li><li><p><code>光滑噪声</code>：噪声指数据中存在着错误或异常 ( 偏离期望值 ) 的数据，这些数据对数据的分析造成了干扰。我们可通过 <code>分箱</code>、<code>回归</code>、<code>离群点分析</code> 等噪声光滑技术来消除噪声。</p><ul><li><code>分箱</code>：考察数据的近邻 ( 周围的值 ) 来光滑有序数据值。</li><li><code>回归</code>：用一个函数拟合数据来光滑数据。</li><li><code>离群点分析</code>：五数概括 ( 中位数、四分位数、最大最小观测值 )、箱线图与离群点；或通过聚类来检测离群点。</li></ul></li></ul><h3 id="数据集成"><a href="#数据集成" class="headerlink" title="数据集成"></a>数据集成</h3><ul><li><code>实体识别问题</code>：<ul><li>问题描述：来自多个信息源，各数据源中的实体之间如何匹配，这涉及实体识别问题。如不同数据来源于不同数据库中，现实意义上它们是同一实体，但它们属性的元数据表达却不同 ( 如主键 )。</li><li>解决方法：每个属性的元数据包含名字、含义、数据类型和属性的允许值范围，以及处理空值的空值规则。这样的元数据可帮助我们避免模式集成的错误。</li></ul></li><li><code>冗余和相关分析</code>：这里讨论的冗余是对应于数据的属性 ( 特征 ) 层面讨论的。<ul><li>分类 ( 标称 ) 属性的 <code>卡方检验</code> ( $\chi^2$ )，发现属性 A、B 之间的相关联系。</li><li>数值数据的 <code>相关系数</code>：计算属性 A、B 之间的相关系数 ( 又称 Pearson 积矩系数 )，估计这两个属性的相关度。</li><li>数值数据的 <code>协方差</code>：协方差和方差是两个类似的度量 ( 方差可理解为协方差的特殊形式 )，其作用是评述两个属性如何一起变化。</li></ul></li></ul><h3 id="数据归约"><a href="#数据归约" class="headerlink" title="数据归约"></a>数据归约</h3><ul><li><p><code>维归约</code>：也称为特征归约，减少所考虑的属性的个数。</p><ul><li><p>通俗理解：即从原有的特征中删除不重要或不相关的特征。比如，某些实例数据中属性值与所研究的问题无关，我们可以选择性地剔除。</p><blockquote><p>本课堂实例中，是预测志愿者是否在冥想。而相关数据集呈现三种特征：精神专注度、冷静度以及志愿者的年龄。而志愿者是否发生冥想活动，很明显与性别无关，则可选择性地剔除该属性。</p></blockquote></li><li><p>方法包括：小波变换、主成分分析、属性子集选择等。当然利用冗余和相关分析也是可行的。</p></li></ul></li><li><p><code>数量规约</code>：用替代的、较小的数据表示形式替换原数据。</p><ul><li>通俗理解：即通过对特征进行重组来减少特征的个数。比如，某些实例数据中属性 ( 维度 ) 太多，我们人类大脑是难以理解它的。则我们可通过降维方法以及可视化工具，以二维或者三维的的形式复现数据 ( 的特征 )。</li><li>方法包括：回归和对数-线性模型、数据立方体聚集、聚类、降维等。</li></ul></li></ul><h3 id="数据变换"><a href="#数据变换" class="headerlink" title="数据变换"></a>数据变换</h3><ul><li><code>归一化</code>：针对每一个特征 ( 维度 )，去均值和方差归一化。即把属性数据按比例缩放，让所有特征在统一数量级上运作，如此一来数据指标之间就有了可比性。</li><li><code>离散化</code>：把值用区间标签或者概念标签替换，即这些标签可递归地组织成更高层概念，导致数值属性的 <code>概念分层</code>。<ul><li><code>数值属性</code>：在实际操作中，即把连续型特征的值离散化，使之成为少量的区间，每个区间映射到一个离散符号。这种技术的好处在于简化了数据描述，并易于理解数据和最终的挖掘结果。</li><li><code>标称 (分类) 属性</code>：标称属性具有有穷多个不同值，且值之间无序。例如地位位置、年龄层次等。对于标称属性，我们需要人工定义概念分层。</li></ul></li><li><p><code>向量化</code>：当我们已基本完成数据处理阶段的工作，得到可供使用的数据集。那么紧接着的步骤，即把实例数据转换成 <code>特征向量</code> ( 向量是特征的数值表示形式 )，所有实例的特征向量组成 <code>特征矩阵</code>。然后，在 <code>Python</code> 中通过 <code>Numpy</code> 和 <code>Pandas</code> 包装，即实际上让 <code>narray</code> 数组成为特征矩阵的存储和运算的媒介。</p><p>  当完成以上流程后，数据预处理阶段即可告一段落，紧接着便可开始开始训练模型了。</p><blockquote><p>由于篇幅的缘故，数据预处理的讨论暂到此为止。当然，数据预处理的内容不仅如此，更详细的理论细节可参详 Jiewei Han 的《数据挖掘：概念与技术》$^{[1]}$。 而数据预处理在 Python 中如何实现，则参考 Keras 之父弗朗索瓦·肖莱的 《Python深度学习》$^{[2]}$。</p></blockquote></li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li>[1] <a href="https://book.douban.com/subject/2038599/" target="_blank" rel="noopener">Jiewei Han, Micheline Kamber and Jian Pei. 数据挖掘 (第三版) [M]. 机械工业出版社, 2018, 56-79.</a></li><li>[2] <a href="https://book.douban.com/subject/30293801/" target="_blank" rel="noopener">弗朗索瓦·肖莱，张亮 (译). Python 深度学习 [M]. 人民邮电出版社, 2018, 80-82.</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note default&quot;&gt;&lt;p&gt;作者：Siraj Raval&lt;br&gt;课堂：The Best Way to Prepare a Dataset Easily | &lt;a href=&quot;https://www.bilibili.com/video/av35419601&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Bilibili&lt;/a&gt; | &lt;a href=&quot;https://www.youtube.com/watch?v=0xVqLJe9_CY&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Youtube&lt;/a&gt;&lt;br&gt;源码：llSourcell.Prepare dataset challenge | &lt;a href=&quot;https://github.com/llSourcell/prepare_dataset_challenge&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github&lt;/a&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;p&gt;本课堂的核心是讲述数据分析前夕的数据预处理过程，包括准备数据阶段和处理数据阶段。再具体以实例：通过大脑扫描公共数据集来建模、分析，预测某人是否在冥想。&lt;/p&gt;
    
    </summary>
    
      <category term="Project" scheme="http://www.kofes.cn/categories/Project/"/>
    
    
      <category term="数据挖掘" scheme="http://www.kofes.cn/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
      <category term="数据预处理" scheme="http://www.kofes.cn/tags/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/"/>
    
      <category term="Kaggle" scheme="http://www.kofes.cn/tags/Kaggle/"/>
    
  </entry>
  
  <entry>
    <title>极客 | 多套软件解决方案助你提高生产力</title>
    <link href="http://www.kofes.cn/2018/11/software-solution.html"/>
    <id>http://www.kofes.cn/2018/11/software-solution.html</id>
    <published>2018-11-01T14:13:14.000Z</published>
    <updated>2018-11-07T02:00:10.257Z</updated>
    
    <content type="html"><![CDATA[<p>在输出本博文之初，意图是很纯粹的，即把平日里体验佳、少折腾、踩过坑的种种软件整理成册，以便于日后装机或朋友间安利、分享。</p><p>再者，在平日的工作、娱乐环境中，单一的软件远远不够满足我们的需求。软件虽然一定程度上解放了我们的生产力，而随着个人的需求日益增长、消费水平升级，享受的服务逐渐被分散细化，我们的工作效率提升了，但人与软件更密切的交互让我们紧密地捆绑在一起，似乎我们并没有被真正意义地 “解放” 出来？其次，每款软件终究是一个体，一些连贯性的交互需求，它们是很难或无法独自完成的，故我们需要更高阶的完整软件解决方案。例如，智能路由系统 ( 网络中心 + 控制中心 )、个人博客 ( 笔记 + 储存 + 分享 )、个人私有云 ( 储存 + 远程 + 共享 )、智能家居控制中心 ( 跨平台 + 控制中心 )、家庭影院中心等。即我们通过专职的服务器，运作相应的操作系统和应用程序，以提供完整的软件解决方案。</p><p>最后，谈起专职的服务器便是组装一台 <code>家用服务器</code>。在服务器中，我们可通过 <code>虚拟机</code> 实现私有云、智能路由系统、Web 服务器、代码托管服务器等，把以上系统方案整合到 N in 1 的服务器中，既充分重利用了硬件资源，同时也节约了房间的物理空间。<br><a id="more"></a></p><h2 id="更新进度"><a href="#更新进度" class="headerlink" title="更新进度"></a>更新进度</h2><ul><li>2018.10.22：完成初稿；</li><li>2018.10.25：完成系统解决方案的「 个人博客解决方案 」章节内容；</li><li>2018.11.02：更新「 常备软件清单 」章节内容；</li><li>2018.11.03：更新「浏览器插件」章节内容；</li><li>2018.11.05：完成系统解决方案的「代码托管方案：Svn」章节内容；</li></ul><h2 id="办公利器：常备软件清单"><a href="#办公利器：常备软件清单" class="headerlink" title="办公利器：常备软件清单"></a>办公利器：常备软件清单</h2><h3 id="开篇引言"><a href="#开篇引言" class="headerlink" title="开篇引言"></a>开篇引言</h3><ul><li><code>选应用的意图</code>：常备软件清单，覆盖了办公、开发、设计、写作、影音、系统等几大类别的应用，且选应用的意图都是很明确的，即办公类应用，应尽可能地提升效率以提高生产力；娱乐类应用，应更便捷地交互体验以提升幸福感；系统类应用，应融洽地接入系统以焕发 Mac 本该拥有的强大本质。</li><li><code>选应用的方法</code>：再者，为什么推荐这些应用，主要考虑因素是：<ul><li>方案一：一方面是针对平台优化的独占平台应用，另一方面则是个人的主战装备是 Macbook Pro，故推荐应用以 <code>MacOS</code> 先入为主，再考虑其他方案；</li><li>方案二：则是 <code>全平台通用</code> 的方案。</li><li>方案三：总有功能性应用是独占平台的，遇到此情况则提供 <code>退阶方案</code>，即寻找同类功能的优秀应用作为替代方案。</li></ul></li><li><code>选应用的准则</code>：其次，我们秉承 <code>免费开源</code> 的理念来寻找高质量应用，但并不会一味追求免费而错过或放弃收费的应用。由于方案初制定，后期会不断补充内容，造成不便请谅解。</li></ul><h3 id="影音媒体"><a href="#影音媒体" class="headerlink" title="影音媒体"></a>影音媒体</h3><h4 id="IINA"><a href="#IINA" class="headerlink" title="IINA"></a>IINA</h4><ul><li>应用类型：📺 | 媒体播放器</li><li>是否收费：🆓 | 开源免费</li><li>支持平台：<code>MacOS</code></li><li>官方地址：<a href="https://lhc70000.github.io/iina/zh-cn/" target="_blank" rel="noopener">IINA 中文</a> | <a href="https://lhc70000.github.io/iina/" target="_blank" rel="noopener">IINA 英文</a> | <a href="https://github.com/lhc70000/iina" target="_blank" rel="noopener">Github 开源</a></li><li>推荐理由：<ul><li>开源且完全免费  ( GPLv3 )；</li><li>在线字幕搜索和智能本地字幕匹配；</li><li>满足你关于视频、音频、字幕等相关的基本功能；</li><li>基于 MPV ( 神级开源解码工具 ) 的媒体播放器，支持几乎所有常用媒体播放，且稳定解码并输出高质量的影像。</li></ul></li></ul><h4 id="MPV"><a href="#MPV" class="headerlink" title="MPV"></a>MPV</h4><ul><li>应用类型：📺 | 媒体播放器</li><li>是否付费：🆓 | 开源免费</li><li>支持平台：<code>MacOS</code> | <code>Windows</code> | <code>Linux</code> | <code>Android</code></li><li>官方地址：<a href="https://mpv.io/" target="_blank" rel="noopener">MPV 介绍</a> | <a href="https://mpv.io/installation/" target="_blank" rel="noopener">MPV 下载</a> | <a href="https://mpv.io/manual/master/" target="_blank" rel="noopener">MPV 手册</a> | <a href="https://github.com/mpv-player/mpv" target="_blank" rel="noopener">Github 开源</a></li><li>推荐理由：<ul><li>开源且完全免费 ( GPLv2 或更高版本 )；</li><li>IINA 的退阶产品，MPV 的特性与前者相仿，但支持多平台使用。</li></ul></li></ul><h4 id="MusicLake"><a href="#MusicLake" class="headerlink" title="MusicLake"></a>MusicLake</h4><ul><li>应用类型：🎵 | 音乐播放器</li><li>是否付费：🆓 | 开源免费</li><li>支持平台：<code>MacOS</code> | <code>Windows</code> | <code>Linux</code> | <code>Android</code></li><li>官方地址：<a href="https://github.com/sunzongzheng/music" target="_blank" rel="noopener">Github 开源/介绍</a> | <a href="https://github.com/sunzongzheng/music/releases" target="_blank" rel="noopener">MusicLake 下载</a></li><li>推荐理由：<ul><li>开源免费 ( 目前免费 )；</li><li>跨平台音乐播放器，可搜网易云、QQ 音乐、虾米音乐，且支持一键导入音乐平台歌单；</li><li>支持云歌单同步，但需要在应用内登录；</li><li>支持第三方授权登录 ( <a href="https://baike.baidu.com/item/oAuth/7153134?fr=aladdin" target="_blank" rel="noopener">OAuth</a> )，免去繁琐注册、账号隐私泄漏等问题，目前支持微博、微信、QQ、Twiter、Google 授权登录。</li></ul></li></ul><h3 id="媒体编辑"><a href="#媒体编辑" class="headerlink" title="媒体编辑"></a>媒体编辑</h3><h4 id="Permute"><a href="#Permute" class="headerlink" title="Permute"></a>Permute</h4><ul><li>应用类型：📽 | 格式转换</li><li>是否付费：💵 | 付费应用</li><li>支持平台：<code>MacOS</code></li><li>官方地址：<a href="https://software.charliemonroe.net/permute.php" target="_blank" rel="noopener">Permute 官方</a></li><li>推荐理由：<ul><li>主要与 <a href="#Downie">Downie</a> 配合使用，用于网络流媒体的分段视频拼接、格式转换；</li><li>作为媒体编辑应用，足够应付基本的视频、音频、图片格式转换；</li><li>拖拽方式操作即可实现视频拼接、音轨视频一键合成。</li></ul></li></ul><h4 id="FFmpeg"><a href="#FFmpeg" class="headerlink" title="FFmpeg"></a>FFmpeg</h4><ul><li>应用类型：📽 | 格式转换</li><li>是否付费：🆓 | 免费开源</li><li>支持平台：<code>MacOS</code> | <code>Windows</code> | <code>Linux</code></li><li>官方地址：<a href="http://www.ffmpeg.org/" target="_blank" rel="noopener">FFmpeg 官方</a> | <a href="http://www.ffmpeg.org/download.html" target="_blank" rel="noopener">FFmpeg 下载</a> | <a href="http://www.ffmpeg.org/documentation.html" target="_blank" rel="noopener">FFmpeg 文档</a></li><li>推荐理由：<ul><li>开源且完全免费  ( GPLv2 或更高版本、LGPLv2.1 或更高版本 )；</li><li>Permute 的退阶产品，而退阶并不是它功能比前者弱，而是它作为 <code>音视频的完整解决方案</code>，入门成本较高；</li><li>跨平台剪辑、转码、合成音频和视频；</li></ul></li></ul><h4 id="ArcTime"><a href="#ArcTime" class="headerlink" title="ArcTime"></a>ArcTime</h4><ul><li>应用类型：🎞 | 媒体编辑</li><li>是否付费：💵 | 增值服务内购</li><li>支持平台：<code>MacOS</code> | <code>Windows</code> | <code>Linux</code></li><li>官方地址：<a href="http://www.arctime.cn/zh/index.html" target="_blank" rel="noopener">ArcTime 官方</a> | <a href="http://www.arctime.cn/zh/download.html" target="_blank" rel="noopener">ArcTime 下载</a></li><li>推荐理由：<ul><li>跨平台的字幕制作软件；</li><li>语音识别文字，机器翻译 ( 点击了解 <a href="http://arctime.cn/zh/service.html" target="_blank" rel="noopener">增值服务</a> )；</li><li>导出多种字幕格式，且支持导出面向非编软件的软字幕；</li><li>无缝支持所有主流非编软件的工程文件互导入、导出。</li></ul></li></ul><h3 id="高效办公"><a href="#高效办公" class="headerlink" title="高效办公"></a>高效办公</h3><h4 id="MacDown"><a href="#MacDown" class="headerlink" title="MacDown"></a>MacDown</h4><ul><li>应用类型：📝 | 文档编辑</li><li>是否付费：🆓 | 开源免费</li><li>支持平台：<code>MacOS</code></li><li>官方地址： <a href="http://macdown.uranusjr.com/blog/macdown-help/" target="_blank" rel="noopener">MacDown 官方</a> | <a href="https://github.com/MacDownApp/macdown" target="_blank" rel="noopener">Github 开源</a></li><li>推荐理由：<ul><li>开源且完全免费；</li><li>稳定且渲染速度快；</li><li>纯粹的 Markdown 文本编辑器，支持本地化管理 <code>MD</code> 文档 ( 即功能类似 Windows 的 TXT 文本编辑器 )。</li></ul></li></ul><h4 id="MWeb"><a href="#MWeb" class="headerlink" title="MWeb"></a>MWeb</h4><ul><li>应用类型：📝 | 文档编辑</li><li>是否付费：💵 | 付费应用</li><li>支持平台：<code>MacOS</code> | <code>iOS</code></li><li>官方地址：<a href="https://zh.mweb.im/" target="_blank" rel="noopener">MWeb 官方</a> | <a href="https://sspai.com/post/33855" target="_blank" rel="noopener">少数派评测</a></li><li>推荐理由：<ul><li>苹果全家桶可支持多终端云同步、云办公；</li><li>支持丰富的 <code>Github Flavored Markdown (GFM)</code> 语法，另外还支持表格、TOC、LaTeX、代码块、任务列表、脚注等；</li><li>内建文档分类、文档贴标签功能，即支持快速检索文章内容，也支持一体化的文档管理；</li><li>丰富的 Markdown 导出配置，具体支持有：<code>jpg</code>、<code>html</code>、<code>epub</code>、<code>pdf</code>、<code>rtf</code>、<code>docx</code>；</li><li>支持一键发布功能，直接发布至 <code>Wordpress</code>、<code>印象笔记</code>、<code>Blogger</code> 等。</li></ul></li></ul><h4 id="Yu-Writer"><a href="#Yu-Writer" class="headerlink" title="Yu Writer"></a>Yu Writer</h4><ul><li>应用类型：📝 | 文档编辑</li><li>是否付费：🆓 | 免费应用</li><li>支持平台：<code>MacOS</code> | <code>Windows</code> | <code>Linux</code> ( Coming soon )</li><li>官方地址：<a href="https://ivarptr.github.io/yu-writer.site/" target="_blank" rel="noopener">Yu Writer 官网</a></li><li>推荐理由：<ul><li>开源免费 ( 可付费升级至 Pro 版本 )；</li><li>MWeb 的退阶产品，功能几乎与 MWeb 一样，特色是多平台支持。</li></ul></li></ul><h3 id="设计工具"><a href="#设计工具" class="headerlink" title="设计工具"></a>设计工具</h3><h4 id="Adobe-Series"><a href="#Adobe-Series" class="headerlink" title="Adobe Series"></a>Adobe Series</h4><ul><li>应用类型：📐 | 设计套件</li><li>是否付费：💵 | 付费应用</li><li>支持平台：<code>MacOS</code> | <code>Windows</code></li><li>推荐理由：Adobe 全家桶，设计师必备套件。</li></ul><h3 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h3><h4 id="Parallels-Desktop"><a href="#Parallels-Desktop" class="headerlink" title="Parallels Desktop"></a>Parallels Desktop</h4><ul><li>应用类型：🖥 | 虚拟机软件</li><li>是否付费：💵 | 付费应用</li><li>支持平台：<code>MacOS</code></li><li>官方地址：<a href="https://www.parallels.com/cn/" target="_blank" rel="noopener">PD 官网</a></li><li><p>推荐理由：Mac 上性能首屈一指的虚拟机工具。</p><blockquote><p>在自己的机器上，分别用 VMware 和 PD 测试运行 Windows 10，日常使用强度 ( 编码、浏览网页、看视频等 )。相比于 VMware，PD 运行流畅且发热程度更低。当然，一两台机器的测试结果并不具有参考性，故 PD 在 MacOS 上的优势可自行体验后再决定购入使用 ( 都有试用版本体验 )。</p></blockquote></li></ul><h4 id="VMware"><a href="#VMware" class="headerlink" title="VMware"></a>VMware</h4><ul><li>应用类型：🖥 | 虚拟机软件</li><li>是否付费：💵 | 付费应用</li><li>支持平台：<ul><li><code>MacOS</code>：支持产品 VMware  Fusion</li><li><code>Window、Linux</code>：支持产品 Workstation Pro</li><li><code>Window、Linux</code>：支持产品 Workstation Player</li></ul></li><li>官方地址：<a href="https://www.vmware.com/cn/products/fusion.html" target="_blank" rel="noopener">VMware Fusion</a> | <a href="https://www.vmware.com/cn/products/workstation-pro.html" target="_blank" rel="noopener">Workstation Pro</a> | <a href="https://www.vmware.com/cn/products/workstation-player.html" target="_blank" rel="noopener">Workstation Player</a></li><li>推荐理由： 跨平台虚拟化软件，即它可安装在 Windows、Linux、MacOS 的操作系统上使用。</li></ul><h4 id="VirtualBox"><a href="#VirtualBox" class="headerlink" title="VirtualBox"></a>VirtualBox</h4><ul><li>应用类型：🖥 | 虚拟机软件</li><li>是否付费：🆓 | 开源免费</li><li>支持平台：<code>MacOS</code> | <code>Windows</code> | <code>Linux</code></li><li>官方地址：<a href="https://www.virtualbox.org/" target="_blank" rel="noopener">VirtualBox 官网</a> | <a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="noopener">VirtualBox 下载</a> | <a href="https://www.virtualbox.org/wiki/End-user_documentation" target="_blank" rel="noopener">用户手册</a> | <a href="https://www.virtualbox.org/wiki/Technical_documentation" target="_blank" rel="noopener">开源手册</a></li><li>推荐理由：<ul><li>开源且完全免费；</li><li>跨平台虚拟化软件，即它可安装在 Windows、Linux、MacOS 的操作系统上使用；</li><li>可虚拟的操作系统包括 Windows、Mac OS X、Linux、OpenBSD、Solaris、IBM OS2、Android 等。</li></ul></li></ul><h4 id="DBeaver"><a href="#DBeaver" class="headerlink" title="DBeaver"></a>DBeaver</h4><ul><li>应用类型：🗄 | 数据库管理</li><li>是否付费：🆓 | 开源免费</li><li>支持平台：<code>MacOS</code> | <code>Windows</code> | <code>Linux</code></li><li>官方地址：<a href="https://dbeaver.io/" target="_blank" rel="noopener">DBeaver 官网</a> | <a href="https://dbeaver.io/download/" target="_blank" rel="noopener">DBeaver 下载</a> | <a href="https://github.com/dbeaver/dbeaver/" target="_blank" rel="noopener">Github 开源</a></li><li>推荐理由：<ul><li>开源且完全免费 ( 可付费升级 <a href="https://dbeaver.com/" target="_blank" rel="noopener">企业版</a> )；</li><li><code>通用数据库管理工具</code> 和 <code>SQL 客户端</code>，支持 MySQL, PostgreSQL, Oracle, DB2, MSSQL, Sybase, Mimer, HSQLDB, Derby 及兼容 JDBC 的数据库。</li><li>它可以处理任何的 <code>外部数据源</code> ( 数据源包含数据库服务器的名称和位置、数据库驱动程序以及在登录数据库时所需的信息 )。</li></ul></li></ul><h4 id="Sequel-Pro"><a href="#Sequel-Pro" class="headerlink" title="Sequel Pro"></a>Sequel Pro</h4><ul><li>应用类型：🗄 | 数据库管理</li><li>是否付费：🆓 | 开源免费</li><li>支持平台：<code>MacOS</code></li><li>官方地址：<a href="http://www.sequelpro.com/" target="_blank" rel="noopener">Sequel Pro 官网</a> | <a href="https://github.com/sequelpro/sequelpro" target="_blank" rel="noopener">Github 开源</a></li><li>推荐理由：<ul><li>开源且完全免费；</li><li>MacOS 平台独占应用，专门管理 <code>MySQL</code> 和 <code>MariaDB</code> 数据库的工具，操作界面非常友好，若仅是处理 MySQL 数据库，Sequel Pro 是你开发的最佳伴侣。</li></ul></li></ul><h4 id="FileZilla"><a href="#FileZilla" class="headerlink" title="FileZilla"></a>FileZilla</h4><ul><li>应用类型：📤 | 文件传输</li><li>是否付费：🆓 | 开源免费</li><li>支持平台：<code>MacOS</code> | <code>Windows</code> | <code>Linux</code></li><li>官网网址：<a href="https://filezilla-project.org/" target="_blank" rel="noopener">FileZilla 官方</a> | <a href="https://filezilla-project.org/download.php?type=client" target="_blank" rel="noopener">FileZilla 客户端</a> | <a href="https://filezilla-project.org/download.php?type=server" target="_blank" rel="noopener">FileZilla 服务端</a> | <a href="https://filezilla-project.org/sourcecode.php" target="_blank" rel="noopener">源代码</a></li><li>推荐理由：<ul><li>开源且完全免费 ( 可付费升级 <a href="https://filezillapro.com/" target="_blank" rel="noopener">企业版</a> )；</li><li>跨平台的 <code>FTP</code> 解决方案，支持 FTP、FTPS、SFTP 等文件传输协议；</li></ul></li></ul><h4 id="CornerStone"><a href="#CornerStone" class="headerlink" title="CornerStone"></a>CornerStone</h4><ul><li>应用类型：⌨️ | 代码管理</li><li>是否付费：💵 | 付费应用</li><li>支持平台：<code>MacOS</code></li><li>官方地址：<a href="https://cornerstone.assembla.com/" target="_blank" rel="noopener">CornerStone 官网</a></li><li>推荐理由：面向 Svn ( 开放源代码的版本控制系统 )，即 CornerStone 是一款拥有界面交互的 Svn 客户端。</li></ul><h4 id="TortoiseSVN"><a href="#TortoiseSVN" class="headerlink" title="TortoiseSVN"></a>TortoiseSVN</h4><ul><li>应用类型：⌨️ | 代码管理</li><li>是否付费：🆓 | 开源免费</li><li>支持平台：<code>Windows</code></li><li>官方地址：<a href="https://tortoisesvn.net/" target="_blank" rel="noopener">TortoiseSVN 官网</a> | <a href="https://tortoisesvn.net/downloads.html" target="_blank" rel="noopener">TortoiseSVN  下载</a></li><li>推荐理由：面向 Svn ( 开放源代码的版本控制系统 )，即 TortoiseSVN 是一款拥有界面交互的 Svn 客户端。</li></ul><h4 id="Git-GUI-Clients"><a href="#Git-GUI-Clients" class="headerlink" title="Git GUI Clients"></a>Git GUI Clients</h4><ul><li>应用类型：⌨️ | 代码管理</li><li>是否付费：🆓 | 免费使用</li><li>支持平台：<code>MacOS</code> | <code>Windows</code> | <code>Linux</code> | <code>Android</code> | <code>iOS</code></li><li>官方地址：<a href="https://git-scm.com/" target="_blank" rel="noopener">Git 官网</a> | <a href="https://git-scm.com/downloads/guis" target="_blank" rel="noopener">Git 下载</a></li><li>推荐理由：面向 Git ( 开源的分布式版本控制系统 )，即 Git GUI 是一款拥有界面交互的 Git 客户端。</li></ul><h3 id="网络工具"><a href="#网络工具" class="headerlink" title="网络工具"></a>网络工具</h3><h4 id="Downie"><a href="#Downie" class="headerlink" title="Downie"></a>Downie</h4><ul><li>应用类型：📥 |  网络下载</li><li>是否付费：💵 | 付费应用</li><li>支持平台：<code>MacOS</code></li><li>官方下载：<a href="https://software.charliemonroe.net/downie.php" target="_blank" rel="noopener">Downie 官方</a> | <a href="https://sspai.com/post/40999" target="_blank" rel="noopener">少数派评测</a></li><li>推荐理由：<ul><li>超过 1000+ 流媒体网站的视频下载 ( YouTube、Vimeo、Bilibili、优酷、爱奇艺等 )；</li><li>直接拖拽链接即可下载，但注意部分视频源以分片段形式下载，与 <a href="#Permute">Permute</a> 搭配使用即可；</li><li>内置资源搜索功能。</li></ul></li></ul><h3 id="系统补全"><a href="#系统补全" class="headerlink" title="系统补全"></a>系统补全</h3><h4 id="Xcode"><a href="#Xcode" class="headerlink" title="Xcode"></a>Xcode</h4><ul><li>应用类型：⚙️ | 系统内置 ( 包含大部分应用所需要的运行环境 )</li><li>是否付费：🆓 | 免费使用</li><li>支持平台：<code>MacOS</code></li><li>推荐理由：<ul><li>用于 MacOS 和 iOS 应用程序开发的集成开发工具 ( IDE )；</li><li>既使不以开发者角度考虑，它包含了大部分应用运行所需要的依赖库 ( 运行环境 )，推荐安装。</li></ul></li></ul><h4 id="Automator"><a href="#Automator" class="headerlink" title="Automator"></a>Automator</h4><ul><li>应用类型：⚙️ | 系统内置</li><li>是否付费：🆓 | 免费使用</li><li>支持平台：<code>MacOS</code></li><li>官方地址：<a href="https://support.apple.com/zh-cn/guide/automator/welcome/mac" target="_blank" rel="noopener">Automator 官方</a> | <a href="https://sspai.com/post/36667" target="_blank" rel="noopener">少数派评测</a></li><li>推荐理由：iOS 上大名鼎鼎的 <code>Workflow</code>、<code>捷径</code>，相信大伙不会陌生，而作为提升工作效率的神器，在 Mac 端也同样有替代的方案，它就是 <code>Automator</code> ，俗称 “扛炮”。</li></ul><h4 id="iStatistic"><a href="#iStatistic" class="headerlink" title="iStatistic"></a>iStatistic</h4><ul><li>应用类型：🌡 | 系统监控</li><li>是否付费：💵 | 付费应用</li><li>支持平台：<code>MacOS</code> | <code>iOS</code></li><li>推荐理由：<ul><li>系统监测软件，包括性能、能耗及温度情况监测；</li><li>动态化、图表化显示数据 ( 支持 Web DashBoard )，喜欢装机的朋友不妨在机箱内挂小屏幕做展示，科技感十足。</li></ul></li></ul><h4 id="加速大师"><a href="#加速大师" class="headerlink" title="加速大师"></a>加速大师</h4><ul><li>应用类型：🌡 | 系统优化</li><li>是否付费：🆓 | 免费使用</li><li>支持平台：<code>MacOS</code></li><li>官方地址：暂无 ( 只能从 <a href="https://itunes.apple.com/cn/app/%E5%8A%A0%E9%80%9F%E5%A4%A7%E5%B8%88/id1144825078?mt=12" target="_blank" rel="noopener">Mac App Store</a> 中下载，请认准小火箭的图标。但后面发现作者以另一款软件 <a href="https://itunes.apple.com/cn/app/icare-3/id1142437192" target="_blank" rel="noopener">iCare 3</a> 更新项目 )</li><li>推荐理由：<ul><li>轻量级系统垃圾清理工具，卸载管理工具，开机自启项管理工具；</li><li>支持性能监测 ( 内存、CPU、网络 I/O ) 和内存释放的功能；</li></ul></li></ul><h4 id="Keka"><a href="#Keka" class="headerlink" title="Keka"></a>Keka</h4><ul><li>应用类型：📦 | 解压缩工具</li><li>是否付费：🆓 | 开源免费</li><li>支持平台：<code>MacOS</code></li><li>官方地址：<a href="https://www.keka.io/zh-cn/" target="_blank" rel="noopener">Keka 官网</a> | <a href="https://github.com/aonez/Keka" target="_blank" rel="noopener">Github 开源</a></li><li>推荐理由：<ul><li>开源且完全免费 ( GPL )；</li><li>MacOS 平台独占应用，支持 <code>解、压缩</code> 文件；</li><li>且支持 <code>7z</code> 文件和 <code>Zip 2.0</code> 文件使用 <code>AES-256</code> 加密 ；</li><li>可支持创建 7Z, ZIP, TAR, GZIP, BZIP2, XZ, LZIP, DMG, ISO 格式文件；</li><li>可支持解压 7Z, RAR, TAR, GZIP, BZIP2, XZ, LZIP, DMG, ISO, LZMA, EXE, CAB, WIM, PAX, JAR, APK, APPX, CPGZ, CPIO 格式文件。</li></ul></li></ul><h4 id="7-Zip"><a href="#7-Zip" class="headerlink" title="7-Zip"></a>7-Zip</h4><ul><li>应用类型：📦 | 解压缩工具</li><li>是否付费：🆓 | 开源免费</li><li>支持平台：<code>Windows</code> | <code>Linux</code></li><li>官方地址：<a href="https://www.7-zip.org/" target="_blank" rel="noopener">7-Zip 官网</a> | <a href="https://www.7-zip.org/download.html" target="_blank" rel="noopener">7-Zip 下载</a></li><li>推荐理由：<ul><li>开源且完全免费 ( LGPL )；</li><li>国内的解压缩工具不敢恭维，不谈性能，内嵌广告行为就是耍流氓；</li><li>可支持解、压缩格式：7z, XZ, BZIP2, GZIP, TAR, ZIP, WIM</li><li>仅可解压格式：ARJ, CAB, CHM, CPIO, CramFS, DEB, DMG, FAT, HFS, ISO, LZH, LZMA, MBR, MSI, NSIS, NTFS, RAR, RPM, SquashFS, UDF, VHD, WIM, XAR。</li></ul></li></ul><h3 id="论文写作"><a href="#论文写作" class="headerlink" title="论文写作"></a>论文写作</h3><h4 id="Grammarly"><a href="#Grammarly" class="headerlink" title="Grammarly"></a>Grammarly</h4><ul><li>应用类型：📄 | 论文写作</li><li>是否付费：💵 | 增值服务内购</li><li>支持平台：<code>MacOS</code> | <code>Windows</code> | <code>MS Office</code> ( 仅 Windows ) | <code>浏览器插件</code> ( Safari、Chrome、firebox、IE )</li><li>官方地址：<a href="https://www.grammarly.com/" target="_blank" rel="noopener">Grammarly 官网</a> | <a href="https://www.bilibili.com/video/av28844962" target="_blank" rel="noopener">瞎洛 ( 小姐姐 ) 评测</a></li><li>推荐理由：<ul><li>英文写作辅助神器；</li><li>英语检查软件，可自动地单词纠错，标点符号纠错和语法纠错。</li></ul></li></ul><h4 id="Endnote"><a href="#Endnote" class="headerlink" title="Endnote"></a>Endnote</h4><ul><li>应用类型：📄 | 文档管理</li><li>是否付费：💵 | 增值服务内购</li></ul><h2 id="需求升级：系统解决方案"><a href="#需求升级：系统解决方案" class="headerlink" title="需求升级：系统解决方案"></a>需求升级：系统解决方案</h2><h3 id="开篇引言-1"><a href="#开篇引言-1" class="headerlink" title="开篇引言"></a>开篇引言</h3><ul><li>完整软件解决方案：运作相应的 <code>操作系统</code> 和 <code>应用程序</code>，以提供完整的软件解决方案。</li><li>下述所有 <code>解决方案</code>，原则上可在一台服务器实现的。实现原理即服务器上多开 <code>虚拟机</code>，让每台虚拟机各司其职，运作相应的 <code>操作系统</code> 和 <code>应用程序</code>，提供相应的功能或服务。</li><li>这也是近些年想达成的小目标：感谢 liuspy 的文章 $^{[1]}$ 启发，才有想法去组一台 <code>家用服务器</code>，实现 <code>个人私有云 (黑群晖)</code>、<code>软路由 (OpenWrt/iKuai)</code>、<code>Web 服务器</code>、<code>代码托管服务器</code> 等。当然，在条件允许情况下，尽量把攒机过程中所做过的调研资料整理并输出文章，以便同样有折腾需求的朋友复用。</li></ul><h3 id="路由系统解决方案"><a href="#路由系统解决方案" class="headerlink" title="路由系统解决方案"></a>路由系统解决方案</h3><ul><li><p>需求定位：突破普通路由器诸多的瓶颈和限制，除了享受高性能的网络体验，且获得更高阶的 <code>服务体验</code> 和 <code>玩法</code>。</p><blockquote><p>关于服务体验和玩法，具体可参考市面上的智能路由产品，它们表现的花样已经足够多了，如 <code>科学上网</code>、<code>去广告</code>、<code>文件服务器 (FTP/SMB)</code>、<code>运行 Python 程序</code> 等，有兴致的朋友可以自行了解详情。</p></blockquote><ul><li><p>路由系统可分为软路由和硬路由，在介绍前夕，先弄明白两者的 <code>概念</code> $^{[2, 3]}$：</p><ul><li><code>软路由</code>：指利用台式机或服务器配合软件 ( 虚拟机 ) 而形成的路由解决方案。简单理解，即 <code>PC + 操作系统 ( Linux / Windows )  + 专用路由程序</code> 组成的路由解决方案；</li><li><code>硬路由</code>：采用特定的硬件设备，基于嵌入式系统架构，以自行开发或是现成的嵌入式操作系统配合自行开发的路由软件，提供专门的路由器功能。当然，也可理解为 <code>厂家推出的整体路由解决方案</code>，例如网件、华硕、华为、小米、TP-LINK 等生产的路由产品。</li></ul></li><li><p>事实上，路由其实没有软、硬之分，任何路由器都由处理器、内存、路由程序存储器、网络接口模块、电源模块、输入输出部分与系统构成的。</p><p>  而区分两者的概念，主要是为了更精确定位，尽量在满足自己性能需求的前提下，最大化地 <code>节约硬件成本</code> 和 <code>运作成本</code> ( 主要是耗电成本 )。</p></li></ul></li><li><p><code>涉及系统</code>：根据路由的形式，硬件架构、系统架构是不同的，故各有自适用的路由系统，选择正确的路由系统以发挥其最大效能。</p><ul><li>针对软路由：<a href="https://openwrt.org/start?id=zh/start" target="_blank" rel="noopener">OpenWrt (LEDE)</a>、<a href="">iKuai</a>、<a href="http://www.hi-spider.com/zh" target="_blank" rel="noopener">海蜘蛛</a>、<a href="http://firmware.koolshare.cn/LEDE_X64_fw867/" target="_blank" rel="noopener">梅林 (koolshare)</a></li><li>针对硬路由：<a href="https://openwrt.org/start?id=zh/start" target="_blank" rel="noopener">OpenWrt (LEDE)</a>、<a href="http://p4davan.80x86.io/" target="_blank" rel="noopener">Padavan (荒野无灯)</a>、<a href="http://firmware.koolshare.cn/" target="_blank" rel="noopener">梅林 (支持硬件有限)</a></li></ul></li><li><p><code>涉及硬件</code>：硬路由器的硬件架构则是专为路由器而设计的，而软路由器的硬件架构是通用的，故我们只能针对软路由器的方案制定 <code>硬件需求方案</code>，考虑本章节的主题是路由器，则硬件需求方案将留至 <code>装机篇章</code> 讲述。</p></li><li><p>搭建流程：</p></li></ul><h3 id="个人博客解决方案"><a href="#个人博客解决方案" class="headerlink" title="个人博客解决方案"></a>个人博客解决方案</h3><ul><li><p>需求定位：</p><ul><li>纯粹的图文静态博客，仅以内容即可驱动的博客载体，且不需要额外的运营成本 ( 团队运营、服务器等 )。</li><li>Hexo 博客框架的免费开源性质，官方提供强大的 API，还有丰富的社区资源 ( 教程、插件、主题等 )，基本能满足你的个性化服务和需求。</li><li>Hexo 支持 Markdown，上百页面秒级的渲染速度，一键即可部署至 Github。</li></ul></li><li><p>涉及框架：<code>Hexo</code></p></li><li><p>涉及技术：分布式版本控制系统 <code>Git</code>。而这里，使用到的主要功能是代码托管，而托管平台我们选择 <code>Github</code> ( 当然限于国内的访问速度，你可同时部署多个平台，例如：<a href="https://coding.net/" target="_blank" rel="noopener">Coding</a>、<a href="https://gitee.com/" target="_blank" rel="noopener">Gitee</a></p></li><li><p>搭建流程：</p><ul><li>📖 | <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo. 官方使用文档. hexo.io</a> </li><li>📝 | <a href="https://www.kofes.cn/2018/01/Hexo-Installation-Guide.html">Kofe. 基于 Hexo 框架在 Github 上搭建博客. kofes.cn</a></li><li>📝 | <a href="http://baixin.io/2015/08/HEXO搭建个人博客/" target="_blank" rel="noopener">Panbaixin. Hexo + Github 搭建个人博客. baixin.io</a></li><li>📝 | <a href="">C.J.Scarlett. How to Create a Blog with Hexo On Ubuntu. digitalocean.com</a></li></ul></li></ul><h3 id="个人私有云解决方案"><a href="#个人私有云解决方案" class="headerlink" title="个人私有云解决方案"></a>个人私有云解决方案</h3><p>暂未定更新日期。</p><h3 id="跨平台智能家居方案"><a href="#跨平台智能家居方案" class="headerlink" title="跨平台智能家居方案"></a>跨平台智能家居方案</h3><p>暂未定更新日期。</p><h3 id="科学上网解决方案"><a href="#科学上网解决方案" class="headerlink" title="科学上网解决方案"></a>科学上网解决方案</h3><p>暂未定更新日期。</p><h3 id="虚拟专用网络方案"><a href="#虚拟专用网络方案" class="headerlink" title="虚拟专用网络方案"></a>虚拟专用网络方案</h3><p>暂未定更新日期。</p><h3 id="代码托管方案：Svn"><a href="#代码托管方案：Svn" class="headerlink" title="代码托管方案：Svn"></a>代码托管方案：Svn</h3><ul><li>需求定位：作为 <code>集中式</code> 源代码版本控制系统，其适合于企业内部由项目经理统一协调的多个并行项目的开发。有趣的是，更甚有企业把 Svn 当作云端文件夹，毕竟其入门门槛比较低。而在 Git 盛行的环境下，我们学习 Svn 的理由更多的是适应公司的开发模式。至于 Svn 与 Git 的优劣，还是视具体使用环境而言，有兴趣可以参阅参考文章 [4]，其中描述了 Git 与 Svn 的详细对比，它们各自的优劣心中自有标准。  </li><li>涉及技术：集中式的源代码版本控制系统 <code>Svn</code>。</li><li>涉及软件：<ul><li>服务端：<a href="https://www.visualsvn.com/server/download/" target="_blank" rel="noopener">Widnows Server</a></li><li>客户端：<a href="https://tortoisesvn.net/downloads.html" target="_blank" rel="noopener">TortoiseSVN for Windows</a> | <a href="https://cornerstone.assembla.com/" target="_blank" rel="noopener">Cornerstone for MacOS</a></li></ul></li><li>搭建流程：<ul><li>📝 | <a href="https://www.kofes.cn/2018/08/building-a-svn-server.html">Kofe. SVN 环境搭建与使用. kofes.cn</a></li></ul></li></ul><h3 id="代码托管方案：Git"><a href="#代码托管方案：Git" class="headerlink" title="代码托管方案：Git"></a>代码托管方案：Git</h3><p>暂未定更新日期。</p><h2 id="好马配好鞍：浏览器插件"><a href="#好马配好鞍：浏览器插件" class="headerlink" title="好马配好鞍：浏览器插件"></a>好马配好鞍：浏览器插件</h2><h3 id="Violentmonkey"><a href="#Violentmonkey" class="headerlink" title="Violentmonkey"></a>Violentmonkey</h3><ul><li>插件性质：辅助</li><li>支持平台：<code>Chrome</code> | <code>Firefox</code> | <code>Opera</code> | <code>Maxthon</code></li><li>官方地址：<a href="https://violentmonkey.github.io/" target="_blank" rel="noopener">Violentmonkey 官网</a> | <a href="https://violentmonkey.github.io/get-it/" target="_blank" rel="noopener">Violentmonkey 下载</a> | <a href="https://github.com/violentmonkey/violentmonkey" target="_blank" rel="noopener">Github 开源</a></li><li><p>推荐理由：开源的用户脚本管理器。</p><blockquote><p>用户脚本是什么：是一段代码，它们能够优化您的网页浏览体验。安装之后，有些脚本能为网站添加新的功能，有些能使网站的界面更加易用，有些则能隐藏网站上烦人的部分内容。</p></blockquote></li><li><p>脚本库：<a href="https://greasyfork.org/zh-CN" target="_blank" rel="noopener">GreasyFork</a> | <a href="https://openuserjs.org/" target="_blank" rel="noopener">OpenUserJs</a></p></li><li><p>优秀脚本推荐：</p><ul><li><a href="https://greasyfork.org/zh-CN/scripts/369400-local-youtube-downloader" target="_blank" rel="noopener">本地 Youtube 下载器</a>：不需要透过第三方的服务就能下载 YouTube 影片。当然，Youtube 的高码率 ( 1080P、1440P、2160P ) 的媒体是音频、视频分体的，具体可使用 <a href="#FFmpeg">FFmpeg</a> 或 Premiere、Final Cut、iMovie 等视频编辑工具合成。</li><li><a href="https://greasyfork.org/zh-CN/scripts/18733-网盘提取工具" target="_blank" rel="noopener">网盘自动提取提取码</a>：网盘自动提取、输入提取码，省心、省力、不折腾。</li></ul></li></ul><h3 id="Tampermonkey"><a href="#Tampermonkey" class="headerlink" title="Tampermonkey"></a>Tampermonkey</h3><ul><li>插件性质：辅助</li><li>支持平台：<code>Chrome</code> | <code>Firefox</code> | <code>Opera</code> | <code>Edge</code> | <code>Safari</code> | <code>Dolphin</code></li><li>官方地址：<a href="https://tampermonkey.net/" target="_blank" rel="noopener">Tampermonkey 官网</a> | <a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?utm_source=chrome-ntp-icon" target="_blank" rel="noopener">谷歌应用商店</a></li><li>推荐理由：用户脚本管理器。</li></ul><h3 id="广告终结者"><a href="#广告终结者" class="headerlink" title="广告终结者"></a>广告终结者</h3><ul><li>插件性质：辅助</li><li>支持平台：<code>Chrome</code> | <code>360 浏览器</code> | <code>搜狗浏览器</code> | <code>UC 浏览器</code> | <code>猎豹浏览器</code> | <code>百度浏览器</code></li><li>官方地址：<a href="http://www.adtchrome.com/" target="_blank" rel="noopener">官方网站</a> | <a href="https://chrome.google.com/webstore/detail/广告终结者/fpdnjdlbdmifoocedhkighhlbchbiikl?utm_source=chrome-ntp-icon" target="_blank" rel="noopener">谷歌应用商店</a></li><li>推荐理由：<ul><li>可过滤网页中几乎所有的横幅、弹窗、视频广告；</li><li>手动屏蔽网页广告：最喜欢的功能之一，”以氓治氓” 形容也不为过哈。</li></ul></li></ul><h3 id="谷歌学术搜索按钮"><a href="#谷歌学术搜索按钮" class="headerlink" title="谷歌学术搜索按钮"></a>谷歌学术搜索按钮</h3><ul><li>插件性质：辅助</li><li>支持平台：<code>Chrome</code></li><li>官方地址：<a href="https://chrome.google.com/webstore/detail/google-scholar-button/ldipcbpaocekfooobnbcddclnhejkcpn?utm_source=chrome-ntp-icon" target="_blank" rel="noopener">谷歌应用商店</a></li><li>推荐理由：快速检索学术论文、文献，一键下载，一键导出多种标准的引用格式；</li></ul><h2 id="信仰装机：家庭级服务器"><a href="#信仰装机：家庭级服务器" class="headerlink" title="信仰装机：家庭级服务器"></a>信仰装机：家庭级服务器</h2><p>暂未定更新日期。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li>[1] <a href="https://post.smzdm.com/p/674680/" target="_blank" rel="noopener">Liuspy. 千元 DIY 搞定 7*24 小时 N in 1 服务器. smzdm.com</a></li><li>[2] <a href="http://blog.51cto.com/likespc/714064" target="_blank" rel="noopener">周晓锋. 软路由 Vs. 硬路由. 2011. 51cto.com</a></li><li>[3] <a href="http://www.maixj.net/ict/ruanluyou-yingluyou-5723" target="_blank" rel="noopener">云上小悟. 软路由 Vs 硬路由. 2013. maixj.net</a></li><li>[4] <a href="http://www.cnblogs.com/dazhidacheng/p/7478438.html" target="_blank" rel="noopener">跪着行走的boY. Git 和 Svn 的详细对比. cnblogs.com. 2017</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在输出本博文之初，意图是很纯粹的，即把平日里体验佳、少折腾、踩过坑的种种软件整理成册，以便于日后装机或朋友间安利、分享。&lt;/p&gt;
&lt;p&gt;再者，在平日的工作、娱乐环境中，单一的软件远远不够满足我们的需求。软件虽然一定程度上解放了我们的生产力，而随着个人的需求日益增长、消费水平升级，享受的服务逐渐被分散细化，我们的工作效率提升了，但人与软件更密切的交互让我们紧密地捆绑在一起，似乎我们并没有被真正意义地 “解放” 出来？其次，每款软件终究是一个体，一些连贯性的交互需求，它们是很难或无法独自完成的，故我们需要更高阶的完整软件解决方案。例如，智能路由系统 ( 网络中心 + 控制中心 )、个人博客 ( 笔记 + 储存 + 分享 )、个人私有云 ( 储存 + 远程 + 共享 )、智能家居控制中心 ( 跨平台 + 控制中心 )、家庭影院中心等。即我们通过专职的服务器，运作相应的操作系统和应用程序，以提供完整的软件解决方案。&lt;/p&gt;
&lt;p&gt;最后，谈起专职的服务器便是组装一台 &lt;code&gt;家用服务器&lt;/code&gt;。在服务器中，我们可通过 &lt;code&gt;虚拟机&lt;/code&gt; 实现私有云、智能路由系统、Web 服务器、代码托管服务器等，把以上系统方案整合到 N in 1 的服务器中，既充分重利用了硬件资源，同时也节约了房间的物理空间。&lt;br&gt;
    
    </summary>
    
      <category term="Technique" scheme="http://www.kofes.cn/categories/Technique/"/>
    
    
      <category term="软路由" scheme="http://www.kofes.cn/tags/%E8%BD%AF%E8%B7%AF%E7%94%B1/"/>
    
      <category term="私有云" scheme="http://www.kofes.cn/tags/%E7%A7%81%E6%9C%89%E4%BA%91/"/>
    
      <category term="博客搭建" scheme="http://www.kofes.cn/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="智能家居" scheme="http://www.kofes.cn/tags/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85/"/>
    
      <category term="科学上网" scheme="http://www.kofes.cn/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="代码托管" scheme="http://www.kofes.cn/tags/%E4%BB%A3%E7%A0%81%E6%89%98%E7%AE%A1/"/>
    
      <category term="浏览器插件" scheme="http://www.kofes.cn/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>笔记 | 数据分析学习框架</title>
    <link href="http://www.kofes.cn/2018/09/data-analysis-learning-framework.html"/>
    <id>http://www.kofes.cn/2018/09/data-analysis-learning-framework.html</id>
    <published>2018-09-30T01:51:49.000Z</published>
    <updated>2018-10-23T03:27:53.492Z</updated>
    
    <content type="html"><![CDATA[<p>本笔记以秦路老师的文章「如何七周成为数据分析师」为内容框架，整合相关的论文、书籍、视频资料，输出学习笔记。主要目的是检验自己的学习效果和日常复习之需。</p><p>初入数据分析的大门，笔记大部门的知识模块以阅读原资料总结整理而得，难免有理解偏差、错误的地方，若有不正当的解释还望朋友们不吝指教！</p><a id="more"></a><h2 id="更新进度"><a href="#更新进度" class="headerlink" title="更新进度"></a>更新进度</h2><ul><li>2018.09.29：完成初稿，形成笔记的整体框架；</li><li>2018.09.30：更新「数据分析入门」章节；</li></ul><h2 id="学习框架"><a href="#学习框架" class="headerlink" title="学习框架"></a>学习框架</h2><ul><li><code>整体框架</code>：本笔记以秦路老师的文章「如何七周成为数据分析师」$^{[1]}$ 为内容框架，整合相关的论文、书籍、视频资料，输出学习笔记。</li><li><p><code>数学部分</code>：数据分析，离不开数学。关于学习资料的选择，推荐盛骤老师的《概率论与数理统计·第4版》和张宇老师的《带你学概率论与数理统计·浙大4版》。</p><blockquote><p>数学并不是自己擅长的科目，出于这样的考虑，故选择了 <code>大学教材</code> 和 <code>考研辅导书</code>，希望借以习题辅导书复习教材内容，以短时间获得最大成效比。</p></blockquote><ul><li><p>📖 | 书籍 | <a href="https://book.douban.com/subject/3165271/" target="_blank" rel="noopener">盛骤. 概率论与数理统计·第4版. 高等教育出版社</a></p></li><li><p>📖 | 书籍 | <a href="https://book.douban.com/subject/26630236/" target="_blank" rel="noopener">张宇. 带你学概率论与数理统计·浙大4版. 北京理工大学出版社</a></p></li><li><p>📺 | 视频 | <a href="https://www.bilibili.com/video/av14690558?from=search&amp;seid=2673720085936060940" target="_blank" rel="noopener">张宇. 2018 考研概率论强化课程. bilibili.com</a></p></li><li><p>📝 | 文章 | <a href="https://www.kofes.cn/2018/09/probability-and-statistics.html">Kofe | 笔记 | 概率论与数理统计</a></p></li></ul></li><li><p><code>统计部分</code>：很遗憾对此部分知识不了解，在此不具体展开探讨。但《概率论与数理统计》的数理统计部分可以预先复习。</p></li><li><p><code>数据库部分</code>：在秦路老师的文章中，数据库部分侧重 SQL ( 结构化查询语言 ) 的讲解，当然这也是操作性和实用性很强的一模块。且据以往语言学习的经历，<code>多写、多练</code> 是必不可少的阶段，SQL 也不例外，附带的练习题目中有不少经典的实例，作为入门训练材料刚好合适。</p><p>  当然，数据库的知识不仅如此，有需求的朋友可继续参阅书籍《数据库系统概念》$^{[2]}$，即以数据库工程师的角度出发，从需求到维护的流程化学习过程，整体架构上学习数据库这门学科。</p><ul><li><p>📝 | 文章 | <a href="http://www.w3school.com.cn/sql/index.asp" target="_blank" rel="noopener">W3CSchool SQL 教程 &amp; 练习题</a></p></li><li><p>📝 | 文章 | <a href="https://leetcode-cn.com/problemset/database/" target="_blank" rel="noopener">LeetCode SQL 练习题</a></p></li><li><p>📖 | 书籍 | <a href="https://book.douban.com/subject/10548379/" target="_blank" rel="noopener">Abraham Silberschatz. 数据库系统概念. 机械工业出版社</a></p></li><li><p>📖 | 书籍 | <a href="https://book.douban.com/subject/24250054/" target="_blank" rel="noopener">福达(Ben Forta). SQL 必知必会. 人民邮电出版社</a></p></li></ul></li><li><p><code>编程部分</code>：主导 Python 语言编程。由于篇幅的缘故，该部分内容请参阅另一篇博文：</p><ul><li><p>📝 | 文章 | <a href="https://www.kofes.cn/2018/09/life-is-short-we-need-python.html">Kofe | 笔记 | Python 3 入门系列教程</a></p></li><li><p>📝 | 文章 | <a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="noopener">廖雪峰. Python 教程. 2018. liaoxuefeng.com</a></p><blockquote><p>当然，Python 的学习还可以参考廖雪峰老师的教程。</p></blockquote></li><li><p>📖 | 书籍 | <a href="https://github.com/iamseancheney/python_for_data_analysis_2nd_chinese_version" target="_blank" rel="noopener">Iamseancheney (译). Python 数据分析 (第二版). 2017. github.com</a></p><blockquote><p>本书是 2017 年 10 月 20 号正式出版的，和第一版的不同之处有：<br>1) 包括 Python 教程内的所有代码升级为 <code>Python 3.6</code>；<br>2) 更新了 Anaconda 和其它包的 Python 安装方法；<br>3) 更新了 Pandas 为 2017 最新版；<br>4) 新增 <code>高级的 Pandas 工具</code> 章节；<br>5) 简要介绍和使用 <code>StatsModels</code> 和 <code>scikit-learn</code>.  </p></blockquote></li></ul></li><li><p><code>研究部分</code>：自己课题的需求，数据科学方向的研究是必不可少的环节。篇幅原因，则细节在下文中展开探讨。按照惯例，为了便于知识的引用和问题的探讨，以下罗列自己所使用到的学习资料。</p><ul><li><p>🍉 | 书籍 | <a href="https://book.douban.com/subject/26708119/" target="_blank" rel="noopener">周志华. 机器学习 (西瓜书). 清华大学出版社</a></p></li><li><p>🌼 | 书籍 | <a href="https://book.douban.com/subject/27087503/" target="_blank" rel="noopener">[美] 伊恩·古德费洛. 深度学习 (花书). 人民邮电出版社</a></p></li><li><p>📺 | 视频 | <a href="https://www.bilibili.com/video/av15558220" target="_blank" rel="noopener">深度学习. 读书会分享视频集. bilibili.com</a></p><blockquote><p>视频转载自：<a href="https://www.youtube.com/playlist?list=PLsXu9MHQGs8eO64mazCnCU3bc9l25Z1ZZ" target="_blank" rel="noopener">Alena Kruchkova. Deep Learning Book Live Streams. youtube.com</a><br>若有条件科学上网的朋友，可至 Youtube 搭配在线字幕观看。</p></blockquote></li><li><p>📖 | 书籍 | <a href="https://book.douban.com/subject/10590856/" target="_blank" rel="noopener">李航. 统计学习方法. 清华大学出版社</a></p></li><li><p>📖 | 书籍 | <a href="https://book.douban.com/subject/11542972/" target="_blank" rel="noopener">[美] Jiawei Han. 数据挖掘：概念与技术 (原书第3版). 机械工业出版社</a></p></li></ul></li></ul><h2 id="数据分析入门"><a href="#数据分析入门" class="headerlink" title="数据分析入门"></a>数据分析入门</h2><h3 id="Excel：不考虑性能和数据量"><a href="#Excel：不考虑性能和数据量" class="headerlink" title="Excel：不考虑性能和数据量"></a>Excel：不考虑性能和数据量</h3><ul><li>掌握各类功能强大的函数 — <a href="https://ask.hellobi.com/blog/qinlu/5976" target="_blank" rel="noopener">常见 Excel 函数</a><ul><li>清洗处理类：trim、concatenate、replace、substitute、left/right/mid、len/lenb、find、search、text</li><li>关联匹配类：lookup、vlookup、index、match、row、column、offset</li><li>逻辑运算类：if、and、or、is系列</li><li>计算统计类：sum/sumif/sumifs、sumproduct、count/countif/countifs、max、min、rank、rand/randbetween、averagea、quartile、stdev、<code>substotal</code>、int/round</li><li>时间序列类：year、month、weekday、weeknum、day、date、now、today、<code>datedif</code></li></ul></li><li><p>Excel 常用工具 — <a href="https://ask.hellobi.com/blog/qinlu/5977" target="_blank" rel="noopener">数据分析：Excel 技巧大揭秘</a></p><ul><li><p><code>格式转换</code>：自定义格式规范时间。</p><blockquote><p>2016/11/11 写成 yyyy/MM/dd<br>2016-11-11 23:59:59 写成 yyyy-MM-dd HH:mm:ss</p></blockquote></li><li><p><code>分列</code>：分列功能可以将某一列按照特定规则拆分，常常用来进行数据清洗。</p></li><li><p><code>数据透视表</code>：数据透视表的核心思想是聚合运算，将字段名相同的数据聚合起来，所谓数以类分。</p><blockquote><p>列和行的设置，则是按不同轴向展现数据。简单说，你想要什么结构的报表，就用什么样的拖拽方式。</p></blockquote></li><li><p><code>删除重复项</code>：一种数据清洗和检验的快速方式。想要验证某一列有多少个唯一值，或者数据清洗，都可以使用。</p></li><li><code>自定义下拉菜单</code> (数据有效性)：数据有效性是一种约束，针对单元格限制其输入，也就是让其只能固定几个值。下拉菜单是一种高阶应用，通过允许下拉箭头即可。</li><li><code>查找公式错误</code>：公式报错也不知道错在哪里时候可以使用该功能，尤其是各类IF嵌套或者多表关联，逻辑复杂时。查找公式错误是逐步运算的，以方便定位。</li><li><code>分组和分级显示</code>：常用在报表中，在报表行数多到一定程度时，通过分组达到快速切换和隐藏的目的。</li><li><p><strong><code>分析工具库</code></strong>：分析工具库是高阶分析的利器，包含很多统计计算，检验功能等工具。Excel是默认不安装的，要安装需要加载项，在工具菜单下（不同版本安装方式会有一点小差异）。</p><blockquote><p>分析工具库是统计包，如随机数发生器、排位与百分比排位、回归、抽样、t-检验等。</p></blockquote></li></ul></li><li><p>Excel 实战教程 — <a href="https://ask.hellobi.com/blog/qinlu/5978" target="_blank" rel="noopener">数据分析：手把手教你Excel实战</a></p><ul><li>明确目的<ul><li>数据用来解决什么问题？</li><li>汇总统计制作报表？</li><li>数据可视化，作为一张信息图？</li><li>验证某一类业务假设？</li><li>提高某一个指标的KPI？</li></ul></li><li>观察数据<ul><li>数据有无缺失值<ul><li>某一字段缺失数据较多，要考虑是否删除该字段（超过 50% 即没有业务意义了）</li></ul></li><li>数据是否一致化</li><li>数据是否有脏数据：乱码，错位，重复值，未匹配数据，加密数据</li><li>数据标准结构</li></ul></li><li>数据清洗：结合 <code>观察数据</code> 阶段完成的工作，对数据进行 <code>预处理操作</code>。</li><li>分析过程<ul><li>数据透视表</li></ul></li></ul></li><li>单元格格式：数据分析师会和各种数据类型打交道，包括各类 timestamp，date，string，int，bigint，char，factor，float 等。</li><li>了解中文编码：UTF-8、GBK、ASCII 码。</li></ul><h3 id="Excel：数据可视化"><a href="#Excel：数据可视化" class="headerlink" title="Excel：数据可视化"></a>Excel：数据可视化</h3><ul><li>Excel：多种经典图表<ul><li><a href="https://ask.hellobi.com/blog/qinlu/5986" target="_blank" rel="noopener">数据可视化：你想知道的经典图表全在这</a><ul><li>散点图：表示两个变量之间的关系。后续的学习中，多次借用到散点，统计中的 <code>回归分析</code>，比如数据挖掘中的 <code>聚类</code>。</li><li>折线图：了解某一维度在时间上的规律或者趋势。</li><li>柱形图：堆积柱形图，瀑布图，横向条形图，横轴正负图。</li><li>地理图：一切和空间属性有关的分析都可以用到地理图。</li><li>饼图</li><li>雷达图：也叫蛛网图，适合用在固定的框架内表达某种已知的结果。</li><li>箱线图：它能准确地反映数据维度的离散（最大数、最小数、中位数、四分数）情况。凡是离散的数据都适用箱线图。</li><li>热力图：以高亮形式展现数据。</li><li>关系图</li><li>矩形树图：柱形图不适合表达过多类目（比如上百）的数据，那应该怎么办？矩形树图出现了，它直观地以面积表示数值，以颜色表示类目。</li><li>桑基图：常表示信息的变化和流动状态。</li><li>漏斗图</li></ul></li><li><a href="https://ask.hellobi.com/blog/qinlu/5987" target="_blank" rel="noopener">数据可视化：教你打造升职加薪的报表</a></li></ul></li><li>PowerBI：Dashboard 仪表盘，由多个图表集合成的图表仪盘 — <a href="https://ask.hellobi.com/blog/qinlu/5989" target="_blank" rel="noopener">数据可视化：手把手打造BI</a><ul><li>商业智能（Business Intelligence，BI），在传统企业中，它是一套完整的解决方案。将企业的数据有效整合，快速制作出报表以作出决策。涉及 <code>数据仓库</code>，<code>ETL</code>，<code>OLAP</code>，<code>权限控制</code> 等模块。</li></ul></li></ul><h2 id="数据分析思维"><a href="#数据分析思维" class="headerlink" title="数据分析思维"></a>数据分析思维</h2><ul><li>麦肯锡的分析思维：结构化思考，MECE原则，假设先行，关键驱动等方法论。 — <a href="https://ask.hellobi.com/blog/qinlu/6002" target="_blank" rel="noopener">快速掌握麦肯锡的分析思维</a></li><li>分析思维框架：SMART、5W2H、SWOT、4P4C、六顶思考帽等 — <a href="https://ask.hellobi.com/blog/qinlu/6003" target="_blank" rel="noopener">如何建立数据分析的思维框架</a></li></ul><h2 id="业务知识"><a href="#业务知识" class="headerlink" title="业务知识"></a>业务知识</h2><h2 id="课题研究"><a href="#课题研究" class="headerlink" title="课题研究"></a>课题研究</h2><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li>[1] <a href="https://ask.hellobi.com/blog/qinlu/8930" target="_blank" rel="noopener">秦路. 如何七周成为数据分析师. hellobi.com. 2017</a></li><li>[2] <a href="https://book.douban.com/subject/10548379/" target="_blank" rel="noopener">Abraham Silberschatz. 数据库系统概念 (原书第6版) [M]. 机械工业出版社, 2012</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本笔记以秦路老师的文章「如何七周成为数据分析师」为内容框架，整合相关的论文、书籍、视频资料，输出学习笔记。主要目的是检验自己的学习效果和日常复习之需。&lt;/p&gt;
&lt;p&gt;初入数据分析的大门，笔记大部门的知识模块以阅读原资料总结整理而得，难免有理解偏差、错误的地方，若有不正当的解释还望朋友们不吝指教！&lt;/p&gt;
    
    </summary>
    
      <category term="Reading" scheme="http://www.kofes.cn/categories/Reading/"/>
    
    
      <category term="数据分析" scheme="http://www.kofes.cn/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="Excel" scheme="http://www.kofes.cn/tags/Excel/"/>
    
      <category term="Python" scheme="http://www.kofes.cn/tags/Python/"/>
    
      <category term="数据库" scheme="http://www.kofes.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>笔记 | 概率论与数理统计</title>
    <link href="http://www.kofes.cn/2018/09/probability-and-statistics.html"/>
    <id>http://www.kofes.cn/2018/09/probability-and-statistics.html</id>
    <published>2018-09-29T03:49:24.000Z</published>
    <updated>2018-11-19T13:09:21.422Z</updated>
    
    <content type="html"><![CDATA[<p>本笔记是备战考研时，跟着张宇老师的概率论课程学习整理所得。且输出本笔记的主要目的是快速构建概率的基础知识体系，以便于日后复习查阅和问题探究。或是更具体的应用场景，如 <code>机器学习</code>、<code>数据挖掘</code>、<code>经济统计</code> 等领域，概率论作为这些领域的 <code>先修课程</code>，理论基础尤为重要。由此，无论是初入门还是温故知新，学习基础学科为必经阶段，不妨选择张宇老师的概率论课程，这不失一种高效的复习方案。</p><p>当然，笔记仅是对知识点的整理和归纳，并不能代表原本知识点的严谨定义。若有更进阶的需求，还请查阅概率论相关教材，或重温课程。</p><a id="more"></a><h2 id="更新进度"><a href="#更新进度" class="headerlink" title="更新进度"></a>更新进度</h2><ul><li>2018.10.04：完成初稿，并更新「如何处理复杂事件」章节 ( 共 4 节 )；</li></ul><h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2><ul><li><p>推荐盛骤老师的《概率论与数理统计·第4版》和张宇老师的《带你学概率论与数理统计·浙大4版》。</p><blockquote><p>数学并不是自己擅长的科目，出于这样的考虑，故选择了 <code>大学教材</code> 和 <code>考研辅导书</code>，希望借以习题辅导书复习教材内容，以短时间获得最大成效比。</p></blockquote><ul><li>📖 | 书籍 | <a href="https://book.douban.com/subject/3165271/" target="_blank" rel="noopener">盛骤. 概率论与数理统计·第4版. 高等教育出版社</a></li><li>📖 | 书籍 | <a href="https://book.douban.com/subject/26630236/" target="_blank" rel="noopener">张宇. 带你学概率论与数理统计·浙大4版. 北京理工大学出版社</a></li><li>📺 | 视频 | <a href="https://www.bilibili.com/video/av14690558?from=search&amp;seid=2673720085936060940" target="_blank" rel="noopener">张宇. 2018 考研概率论强化课程. bilibili.com</a></li></ul></li></ul><h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><ul><li><p>以<code>张宇老师</code> 的概率论课程为框架的，围绕 <code>五大问题</code> 展开学习与探讨：在导课部分就明确了 <code>课程体系</code> 和 <code>学习目标</code>，即学习什么、学了怎么用都在浓缩于五大问题当中。</p><ul><li>如何处理复杂事件 $P(A)$；</li><li>如何求分布 $F(x)$、$F(x, y)$；</li><li>如何求数字特征 $EX$、$DX$、$Cov(x, y)$、$\rho_{x,y}$；</li><li>如何使用极限定理 ( 大样本， $n \to \infty$ );</li><li>如何做估计与评价.</li></ul></li><li><p>前 <code>四大问题</code> 主要讨论的是 <code>概率论</code> 部分的内容，<code>最后一问题</code> 则是 <code>数理统计</code> 的内容探讨。</p></li><li>事不宜迟，定下小目标，让自己赶紧行动起来！</li></ul><h2 id="壹-如何处理复杂事件"><a href="#壹-如何处理复杂事件" class="headerlink" title="壹 如何处理复杂事件"></a>壹 如何处理复杂事件</h2><h3 id="随机试验与样本空间"><a href="#随机试验与样本空间" class="headerlink" title="随机试验与样本空间"></a>随机试验与样本空间</h3><h4 id="随机试验"><a href="#随机试验" class="headerlink" title="随机试验"></a>随机试验</h4><ul><li>随机试验，记作 $E$：<ul><li>同条件下可重复。</li><li>试验结果明确可知，且不止一个。</li><li>试验前不知哪个结果会发生。</li></ul></li></ul><h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><ul><li><code>试验结果</code> 中每一个最简单、最基本 (不可再分的结果) 叫 <code>样本点</code> (基本事件)，记作 $\omega$。</li><li>$\omega$ 的全体叫 <code>样本空间</code>，记作 $\Omega$。</li><li><code>样本空间的子集</code> 叫 <code>随机事件</code>，记作 $A, B, C, …$，即英文大写字母表示。</li><li>子集中：<ul><li>$\Omega$ 本身为必然事件。</li><li>$\emptyset$ 为不可能事件。</li></ul></li></ul><h3 id="古典概型"><a href="#古典概型" class="headerlink" title="古典概型"></a>古典概型</h3><h4 id="概念梳理"><a href="#概念梳理" class="headerlink" title="概念梳理"></a>概念梳理</h4><ul><li>若随机事件 $E$ 的样本空间 $\Omega$ 中满足下述两种条件，称其为古典概型：<ul><li>存在 <code>有限个</code> 样本点；</li><li>样本点的发生具有 <code>等可能性</code>.</li></ul></li><li>则其概率表达式为：</li></ul><script type="math/tex; mode=display">P(A) = \frac{A中含样本点个数}{\Omega 中含样本点总数}\tag{1}</script><ul><li><p>对于概率表达式 (1)，我们侧重关注其 <code>计数方法</code>：</p><ul><li><code>穷举法</code>：个数不多时，直接计数即可。</li><li><p><code>集合对应法</code>：</p><ul><li><code>加法原理</code>：完成一件事有 $n$ 类方法，第一类方法有 $m_1$ 种方法，第二类有 $m_2$ 种方法，完成此事共 $\sum_{i = 1}^n m_i$ 种方法。</li><li><code>乘法原理</code>：完成一件事有 $n$ 个步骤，第一步有 $m_1$ 种方法，第二步有 $m_2$ 种方法，第 $n$ 步有 $m_n$ 种方法，故完成此事共 $\prod_{i=1}^n m_i$ 种方法。</li><li><p><code>排列</code>：从 $n$ 个不同的元素中取出 $m(\leq n)$ 个元素，并按照一定顺序排成一列，叫做排序。所有排列的个数叫排列数，记作：</p><script type="math/tex; mode=display">A_n^m = n(n-1)···(n - m + 1) = \frac{n!}{(n - m)!}\tag{2}</script><p><code>全排列</code>：当 $m = n$ 时，$A_n^m = \frac{n!}{0!} = n!$ 称为全排列。</p></li><li><p><code>组合</code>：从 $n$ 个不同元素中取出 $m(\leq n)$ 个元素，并成一组，叫组合。所有组合个数叫组合数，记作：</p><script type="math/tex; mode=display">C_n^m = \frac{A_n^m}{m!}\tag{3}</script><blockquote><p>注意：按照欧美规范，对于 $A_n^m$ 或是 $C_n^m$，m 和 n 的上下位置与我们平常见的是相反的，国内的教材以相反为主。</p></blockquote></li></ul></li><li><p><code>对立事件思想</code>：若研究对象是复杂的，则转而研究对立事件 $\overline{A}$，故有：</p><script type="math/tex; mode=display">n - n_{\overline{A}} = n_A\tag{4}</script></li></ul></li></ul><h4 id="练习巩固"><a href="#练习巩固" class="headerlink" title="练习巩固"></a>练习巩固</h4><h5 id="例题一"><a href="#例题一" class="headerlink" title="例题一"></a>例题一</h5><ul><li>[题目] 从 0 到 9 个数字中任取 3 个不同数字，求：  <ul><li>$A_1$ = {三个数中不含 0 和 5}</li><li>$A_2$ = {三个数中不含 0 或 5}</li><li>$A_3$ = {三个数中含 0，但不含 5}</li></ul></li><li><p>[分析]  令含数字 0 的事件为 $B_1$，含数字 5 的事件为 $B_2$：</p><ul><li><p>$P(A_1) = \frac{ C_8^3 }{ C_{10}^3 } = \frac{7}{15}$</p></li><li><p>$P(A_2) = \frac{ C_{10}^3 - C_1^1·C_1^1·C_8^1 }{ C_{10}^3 } = \frac{14}{15}$</p><blockquote><p>$A_2$ 事件可通 <code>对立事件思想</code> 解题，即所有数字取值可能减去三个数中含 0 且含 5 的情况，即 $A_2 = \overline{ B_1 \bigcup B_2 } = \overline{B_1} \bigcap \overline{B_2}$。</p></blockquote></li><li><p>$P(A_3) = \frac{ C_1^1·C_8^2 }{ C_{10}^3 } = \frac{7}{30}$</p></li></ul></li></ul><h5 id="例题二"><a href="#例题二" class="headerlink" title="例题二"></a>例题二</h5><ul><li>[题目] 袋中有 5 球，3 白 2 黑：<ul><li>先后有放回取 2 球，求 $B_1$ = {至少一白球}</li><li>先后无放回取 2 球，求 $B_2$ = {至少一白球} </li><li>任取 2 球，求 $B_3$ = {至少一白球}</li></ul></li><li><p>[分析] 注意 <code>有放回</code> 和 <code>无放回</code> 的情况，是有区别的：</p><ul><li><p>$P(B_1) = \frac{ C_5^1·C_5^1 - C_2^1·C_2^1 }{ C_5^1·C_5^1 } = \frac{21}{25}$</p></li><li><p>$P(B_2) = \frac{ C_5^1·C_4^1 - C_2^1·C_1^1 }{ C_5^1·C_4^1 } = \frac{9}{10}$</p></li><li><p>通过 <code>对立事件思想</code> 解题，先求 $\overline{B_3}$ = {任取两球全黑} 的概率：</p><script type="math/tex; mode=display">P(\overline{B_3}) = \frac{ C_2^2 }{ C_5^2 } = \frac{1}{10} \\P(B_3) = 1 - P(\overline{B_3}) = \frac{9}{10}</script></li></ul></li><li><p>我们注意到，$P${先后无放回取，至少一白球} 等于 $P${任取两球，至少一白球} 的概率，即 $P(B_2) = P(B_3)$。</p><ul><li><code>得出结论</code>：<code>P{先后无放回} = P{任取}</code></li><li><p><code>证明方式</code>：分别用 <code>先后无放回取两球</code> 的方式和 <code>任取两球</code> 的方式，求 <code>P{两球全黑}</code>，再通过 <code>1 - P{两球全黑}</code> 求 <code>P{至少一白球}</code>： </p><script type="math/tex; mode=display">  p(\text{先后无放回取得两球全黑}) =       \frac{ C_2^1·C_1^1 }{ C_5^1·C_4^1 } = \frac{1}{10} \\  p(\text{任取两球全黑}) =      \frac{ C_2^2 }{ C_5^2 } = \frac{1}{10}</script><p>  当然，任取涉及先后顺序问题，应该对任取结果作排列，但由于上下同乘一种顺序故可略去。</p><script type="math/tex; mode=display">  \require{cancel}  p(\text{任取两球全黑}) =      \frac{ C_2^2·\bcancel{A_2^2} }{ C_5^2 ·\bcancel{A_2^2} } = \frac{1}{10}</script></li><li><p>通过此结论，计算 <code>先后无放回</code> 抽取问题会有很大帮助。例如，从 100 个球中，先后无放回取 40 个球，则可理解为 <code>一把抓 40 个球</code>。</p></li></ul></li></ul><h5 id="例题三"><a href="#例题三" class="headerlink" title="例题三"></a>例题三</h5><ul><li>[题目] 袋有 100 个球，40 白 60 黑：<ul><li>先后 <code>无放回</code> 取 20 个球，求 $C_1$ = {15 白 5 黑}</li><li>先后 <code>无放回</code> 取 20 个球，求 $C_2$ = {第 20 次取到白球}</li><li>先后 <code>有放回</code> 取 20 个球，求 $C_3$ = {15 白 5 黑}</li><li>先后 <code>有放回</code> 取 20 个球，求 $C_4$ = {第 20 次取到白球}</li></ul></li><li><p>[分析] 根据例题二的结论，无放回抽取可等同于任意抽取。</p><ul><li><p>$P(C_1) = \frac{ C_{40}^{15}·C_{60}^5 }{ C_{100}^{20} }$</p></li><li><p>$P(C_2) = \frac{C_{40}^1·99!}{100!} = \frac{40}{100}$ </p><ul><li>1) 利用 <code>抓阄模型</code> 进行解题。即在本题中可理解为：袋中装有 100 个“灰球”，按概率摸球，则有 40% 可能摸到白球，60% 可能摸到黑球。</li><li><p>2) 在本题中，我们可把 100 个球想象成 100 个位置，从左往右排列，位置与次数匹配。例如，我们求第 20 次取到白球的概率，即往 20 的位置只考虑放入白球的情况，剩余位置自由排列即可，故有 $C_{40}^1·99!$。</p><p><img src="/images/illustration/Reading/2018/10/probability-and-statistics_1-1.png" alt="图1-1抓阄模型演示"></p><center>图1-1 抓阄模型演示</center></li></ul></li><li><p>$P(C_3) = C_{20}^{15}·(\frac{40}{100})^{15}·(\frac{60}{100})^5$</p><ul><li>符合二项分布，记取到白球的次数为 X (实验无非取到黑/白两种球)，则可根据公式求解：<script type="math/tex; mode=display">P\{X = k\} = C_n^k·p^k·(1-p)^{n-k}, k = 0, 1, 2, ..., n</script></li></ul></li><li><p>$P(C_4) = \frac{40}{100}$</p></li></ul></li></ul><h3 id="几何概型"><a href="#几何概型" class="headerlink" title="几何概型"></a>几何概型</h3><h4 id="概念梳理-1"><a href="#概念梳理-1" class="headerlink" title="概念梳理"></a>概念梳理</h4><ul><li><p>定义 $\Omega$ 是一个可度量的几何区域，每个样本点的发生具有等可能性。即样本点落入 $\Omega$ 中的某一可度量子区域 $A$ 的可能性大小与 $A$ 的 <code>几何度量</code> 成正比，而与 $A$ 的位置及形状无关。则称其为 <code>几何概型</code>，记作：</p><script type="math/tex; mode=display">  P(A) = \frac{ A 的测度 }{ \Omega 的测度 }  \tag{5}</script></li></ul><h4 id="练习巩固-1"><a href="#练习巩固-1" class="headerlink" title="练习巩固"></a>练习巩固</h4><h5 id="例题一-1"><a href="#例题一-1" class="headerlink" title="例题一"></a>例题一</h5><ul><li>[题目] 假设我上午 8:00-9:00 时间段内进入教室：<ul><li>求 $A_1$ = {我在 8:30-9:00 时间段进教室} 的概率</li><li>求 $A_2$ = {我恰好在 8:30 进入教室} 的概率</li></ul></li><li><p>[分析] 如图 1-2 所示，设 8:00-9:00 的时间段为单位 1：</p><ul><li><p>$P(A_1) = \frac{ \frac12 }{1} = \frac12$</p></li><li><p>$P(A_2) = \frac01 = 0$</p><blockquote><p>在 8:30 这一刻所占长度为 “0”，只是数据研究工具的缺陷，致使测不出来。所以 $P(A) = 0$ 并不能推导 $A_2$ 为不可能事件。</p></blockquote><p><img src="/images/illustration/Reading/2018/10/probability-and-statistics_1-2.png" alt="图1-2单位1长时间段"></p><center>图1-2 单位 1 长时间段</center></li></ul></li></ul><h5 id="例题二-1"><a href="#例题二-1" class="headerlink" title="例题二"></a>例题二</h5><ul><li>[题目] 君子有约，9:00-10:00 甲、乙在校门口见面，等 20 分钟即离开：<ul><li>求 $B$ = {甲、乙能见面} 的概率</li></ul></li><li><p>[分析] 设甲出现的时间为 $x$，乙出现的时间为 $y$：</p><ul><li><p>则两方的时间差为 $|x - y| \leq 20, 0 \leq x \leq 60, 0 \leq y \leq 60$</p><p><img src="/images/illustration/Reading/2018/10/probability-and-statistics_1-3.png" alt="图1-3函数图像"></p><center>图1-3  $|x - y| \leq 20$ 的函数图像</center></li><li><p>根据上述函数的图像可得 $P(B) = \frac{ \int_A }{ \int_\Omega } = \frac{ 1 - (\frac{40}{60})^2 }{1} = \frac59$</p></li></ul></li></ul><h5 id="例题三-1"><a href="#例题三-1" class="headerlink" title="例题三"></a>例题三</h5><ul><li>[题目] 在 (0, 1) 内随机取两个数，$P\{两数之和小于 \leq \frac65\}$</li><li><p>[解析] 由题意可得，则有：</p><p>  <img src="/images/illustration/Reading/2018/10/probability-and-statistics_1-4.png" alt="图1-4函数图像"></p>  <center>图1-4  $x + y \leq \frac65$ 的函数图像</center><script type="math/tex; mode=display">P\{ x + y < \frac65\} = \frac{1 - \frac45*\frac45*\frac12}{1} = \frac{17}{25}</script></li></ul><h3 id="重要公式求概率"><a href="#重要公式求概率" class="headerlink" title="重要公式求概率"></a>重要公式求概率</h3><h4 id="概念梳理-2"><a href="#概念梳理-2" class="headerlink" title="概念梳理"></a>概念梳理</h4><h5 id="对立事件"><a href="#对立事件" class="headerlink" title="对立事件"></a>对立事件</h5><script type="math/tex; mode=display">P(A) = 1- P(\overline{A})\tag{6}</script><h5 id="减法公式"><a href="#减法公式" class="headerlink" title="减法公式"></a>减法公式</h5><script type="math/tex; mode=display">P(A - B) = P(A) - P(AB)\tag{7}</script><h5 id="加法公式"><a href="#加法公式" class="headerlink" title="加法公式"></a>加法公式</h5><ul><li><p>一般情况 ( 通用公式 )：</p><script type="math/tex; mode=display">  P(A + B) = P(A) + P(B) - P(AB)  \tag{9}</script><script type="math/tex; mode=display">  P(A + B + C) = P(A) + P(B) + P(C) - P(AB) - P(AC) - P(BC) + P(ABC)</script></li><li><p>若 $A_1, A_2, …, A_n (n &gt; 3)$ <code>两两互斥 (互不相容)</code>，则可得：</p><script type="math/tex; mode=display">  P(A_1 + A_2 + ... + A_n) = \sum_{i = 1}^n P(A_i)  \tag{6}</script></li><li><p>若 $A_1, A_2, …, A_n (n &gt; 3)$  <code>相互独立</code>，则可得：</p><script type="math/tex; mode=display">  P(A_1 + A_2 + ... + A_n) = 1 - P ( \overline{A_1 + A_2 + ... + A_n} ) \\   = 1 - P( \overline{A_1}·\overline{A_2}·...·\overline{A_n} ) = 1 - \prod_{i=1}^n P(\overline{A_i})  \tag{10}</script><ul><li><code>相互独立</code>：设 $A_1, A_2, …, A_n $，若对其中任意有限个 $A_{i_1}, A_{i_2}, …, A_{i_k}$ 都有 $P(A_{i_1})·P(A_{i_2})·…·P(A_{i_k})$，则称 $A_1, A_2, …, A_n $ 相互独立。  </li><li><code>妇唱夫随</code>：$n$ 个事件相互独立 $\Longleftrightarrow$ 它们中任意一部分事件换成其各自的对立事件，所得的 $n$ 个新事件也是相互独立的。</li></ul></li></ul><p><img src="/images/illustration/Reading/2018/10/probability-and-statistics_1-5.png" alt="图1-5上述公式图解"></p><center>图 1-5 上述公式图解</center><h5 id="条件概率公式"><a href="#条件概率公式" class="headerlink" title="条件概率公式"></a>条件概率公式</h5><blockquote><p>标志性词汇：已知…，当…发生了。</p></blockquote><script type="math/tex; mode=display">P(A | B) = \frac{ P(AB) } { P(B) }, P(B) > 0\tag{11}</script><h5 id="乘法公式"><a href="#乘法公式" class="headerlink" title="乘法公式"></a>乘法公式</h5><script type="math/tex; mode=display">P(AB) = P(A | B)·P(B) \\P(AB) = P(B | A)·P(A)\tag{12}</script><p>一般地，推广至 $P(A_1A_2…A_n)$：</p><script type="math/tex; mode=display">P(A_1A_2...A_n) = \\P(A_n | A_1A_2...A_{n-1})·P(A_{n-1} | A_1A_2...A_{n-2})·...P(A_2 | A_1)·P(A_1)\tag{13}</script><h5 id="全集分解公式"><a href="#全集分解公式" class="headerlink" title="全集分解公式"></a>全集分解公式</h5><blockquote><p>也称 <code>全概率公式</code>，已知第一阶段，求第二阶段。</p></blockquote><ul><li><p>引例：设一个村子和三个小偷，小偷分别为 $A_1、A_2、A_3$，B = {村子失窃}</p><ul><li><p>阶段 (I). 什么人去偷：$A_1, A_2, A_3$</p></li><li><p>阶段 (II). 村子失窃，各小偷去偷的概率：$P(B | A_1) = 0, P(B | A_2) = \frac12, P(B | A_3) = 1$</p></li><li><p>则村子失窃的概率：</p><script type="math/tex; mode=display">P(B) = P(A_1)·P(B | A_1) + P(A_2)·P(B | A_2) + P(A_3)·P(B | A_3) \\  = \frac13 * 0 + \frac13 * \frac12 + \frac13 * 1 = \frac12</script></li></ul></li><li><p>定义与公式，设一随机事件 $E$ 可分两个阶段：</p><ul><li>阶段 (I) $\bigcup_{i = 1}^n A_i = \Omega, A_iA_j = \emptyset (两两互斥), i \neq j$，则称 $A_1, A_1,…, A_n$ 为 $\Omega$ 的一个划分，也叫 <code>完备事件组</code>。</li><li><p>阶段 (II) 事件 $B$ 发生的概率：</p><ul><li>$P(B\Omega) = P(B·(\bigcup_{i = 1}^n A_i) )$ 为全集分解过程。</li><li><p>$B$ 为第 (II) 阶段，$A_i$ 为第 (I) 阶段。</p><script type="math/tex; mode=display">P(B) = P(B\Omega) = P(B·(\bigcup_{i = 1}^n A_i) ) = P( B\bigcap(A_1 + A_2 + ... + A_n) ) \\= P(BA_1 + BA_2 + ... + BA_n) = \sum_{i = 1}^n P(BA_i) \\= \sum_{i = 1}^n P(B | A_i)·P(A_i)\tag{13}</script></li></ul></li></ul></li></ul><h5 id="贝叶斯"><a href="#贝叶斯" class="headerlink" title="贝叶斯"></a>贝叶斯</h5><blockquote><p>也称 <code>逆概率公式</code>，已知第二阶段反推第一阶段 ( 执果索因 )。</p></blockquote><ul><li><p>设一随机事件 $E$ 分成两个阶段：</p><ul><li>阶段 (I) $\bigcup_{j = 1}^n A_j = \Omega, A_iA_j = \emptyset (两两互斥), j \neq i$，则称 $A_1, A_1,…, A_n$ 为 $\Omega$ 的一个划分，也叫 <code>完备事件组</code>。</li><li><p>阶段 (II) 已知 $B$ 发生了，求 $P(A_j | B)$：</p><ul><li>$P(B | A_j)$ 是已知的。</li><li><p>一个事件分两个阶段，考虑全概率公式。</p><script type="math/tex; mode=display">P(A_j | B) = \frac{ P(A_jB) }{ P(B) }= \frac{  P(B | A_j)·P(A_j)}{  \sum_{i = 1}^n P(B | A_i)·P(A_i)}\tag{14}</script></li></ul></li></ul></li></ul><h4 id="练习巩固-2"><a href="#练习巩固-2" class="headerlink" title="练习巩固"></a>练习巩固</h4><h5 id="例题一-2"><a href="#例题一-2" class="headerlink" title="例题一"></a>例题一</h5><ul><li>[题目] 有甲、乙两名射击手，轮流独立射击打靶，甲命中的概率为 $\alpha$，乙命中的概率为 $\beta$。甲先射击，谁先命中谁获胜，求 $P$ = {甲获胜} 的概率。</li><li><p>[分析] 记 $A_i = \{第 i 次命中\}, i = 1, 2, …$，则有：</p><ul><li><p>根据独立互斥条件，结合题意可得：</p><script type="math/tex; mode=display">P\{甲获胜\} = P\{ A_1 + \overline A_1 \overline A_2 A_3 + \overline A_1 \overline A_2 \overline A_3 \overline A_4 A_5 + ... \}= P(A_1) + P(\overline A_1 \overline A_2 A_3) + P(\overline A_1 \overline A_2 \overline A_3 \overline A_4 A_5) + ... \\= P(A_1) + P(\overline A_1)P(\overline A_2)P(A_3) + P(\overline A_1)P(\overline A_2)P(\overline A_3)P(\overline A_4)P(A_5) + ... \\= \alpha + (1 - \alpha)(1 - \beta)\alpha + (1 - \alpha)^2(1 - \beta)^2\alpha + ... \\</script></li><li><p>观察上述式子，我们可设公比 $q = (1 - \alpha)(1 - \beta)$，则公式继续往下推演：</p><script type="math/tex; mode=display">\int_n^{\infty} \alpha + \alpha q + \alpha q^2 + ... + \alpha q^{n-1}= \int_n^{\infty} \frac{\alpha (1 - q^n)}{1 - q}= \frac{a}{1 - q} = \frac{a}{1 - (1 - \alpha)(1 - \beta)}</script></li></ul></li><li><p>[注意] $P$ = {甲获胜} 的概率：</p><script type="math/tex; mode=display">  P\{乙获胜\} = 1 - P\{甲获胜\} = \frac{\beta (1 - \alpha)}{1 - (1 - \alpha)(1 - \beta)}</script><p>  若 $\alpha = \beta = p$，则有：</p><script type="math/tex; mode=display">  P\{甲获胜\}  = \frac{p}{1 - (1 - p)^2}, 令 \, p + q = 1, \,   = \frac{p}{1-q^2} = \frac{p}{(1 + q)(1 - q)} = \frac{1}{1 + q} \\  P\{乙获胜\} = 1 - P\{甲获胜\} = \frac{q}{1 + q}</script><p>  由此可见，<strong>先下手为强</strong>。即谁先射击，谁的胜率高。</p></li></ul><h5 id="题目二"><a href="#题目二" class="headerlink" title="题目二"></a>题目二</h5><ul><li>[题目] 某彩票每周开奖一次，中奖概率为十万分之一，且每周开奖相互独立。某人每周买一次，坚持十年 ( 每年 52 周 )，则求 $P$ = {此人从未中奖} 的概率。</li><li><p>[分析] 记 $A_i = \{第 i 次中奖\}, \, i. = 1, 2, … 52, 且 \, p = 10^{-5}$，则有：</p><script type="math/tex; mode=display">  P\{此人从未中奖\} =   P\{ \overline A_1 \overline A_2 ... \overline A_{52} \} =   (1 - 10^{-5})^{52} = 0.9948</script><p>  由此可见，<strong>天上是不会平白无故掉馅饼</strong>。</p></li></ul><h5 id="题目三"><a href="#题目三" class="headerlink" title="题目三"></a>题目三</h5><ul><li><p>10 份报名表， 3 女 7 男，先后无放回抽取，则:</p><ul><li>(1) $A_1$ = {第三次取到女的报名表} 的概率</li><li>(2) $A_2$ = {第三次才取到女的报名表} 的概率</li><li>(3) $A_3$ = {已知前两次均取到男，第三次才取到女} 的概率</li></ul></li><li><p>[分析] </p><ul><li><p>(1) 由题意可知，利用 <code>抓阄模型</code> 进行解题，即使用 <code>绝对概率</code> 求解：</p><script type="math/tex; mode=display">  P(A_1) = \frac{C_3^1 9!}{10!} = \frac{3}{10}</script></li><li><p>(2) 由题意可知，使用 <code>积事件概率</code> 求解：</p><script type="math/tex; mode=display">  记 A_i = \{第 i 次取到女的报名表\}, \,  i = 1,2, ... \\  则 P(A_2) = P(\overline A_1 \overline A_2 A_3) =   P(A_3 | \overline A_1 \overline A_2 )P(A_2 | \overline A_1 )P(A_1)  \\ = \frac{3}{8} * \frac{6}{9} * \frac{7}{10}= \frac{7}{40}</script></li><li><p>(3) 由题意可知，使用 <code>条件概率</code> 求解：</p><script type="math/tex; mode=display">  P(A_3) = P(A_3 | \overline A_1 \overline A_2) = \frac38</script></li></ul></li></ul><h5 id="题目四"><a href="#题目四" class="headerlink" title="题目四"></a>题目四</h5><ul><li><p>[题目] 设两批数量相同的零件，有一批全部合格，另一批 25% 不合格，75% 合格。从两批产品中任取一件，经检验为合格品，放回原处，并从该处再取一件，求这一件为不合格的概率。</p></li><li><p>[分析] 从两批零件中取得不合格的事件，可分为两个阶段：</p><ul><li>(Ⅰ) 选批次：第一批记作 $H_1$，第二批记作 $H_2$。</li><li><p>(Ⅱ) 取零件：合格记作 $A$，不合格记作 $\overline A$。</p><p>  由题意可知， $P(H_1) = P(H_2) = \frac12, P(A | H_1) = 1, P(A | H_2) = \frac34$</p><p>  首先，从两批产品中任取一件零件为合格品的概率，由全概率公式求得：</p><script type="math/tex; mode=display">  P(A) = P(A \Omega) = P(A | H_1)P(H_1) + P(A | H_2)P(H_2) = \frac78</script><p>  再者，执因索果，已知第一次所取零件为合格品，则选自第一批、第二批的概率由贝叶斯公式可得：</p><script type="math/tex; mode=display">  P(H_1 | A) =  \frac{P(AH_1)}{P(A)} = \frac{P(A | H_1)P(H_1)}{\frac78} = \frac47 \\  P(H_2 | A) =   \frac{P(AH_2)}{P(A)} = \frac{P(A | H_2)P(H_2)}{\frac78} = \frac37</script><p>  于是，设 $C_i = \{第二次是从第 i 批中取得零件的\}, i = 1, 2$，则有：</p><script type="math/tex; mode=display">  P(C_1) = P(H_1 | A) = \frac47, \, P(C_2) = P(H_2 | A) = \frac37 \\</script><p>  则第二次从该处取得不合格零件的概率为：</p><script type="math/tex; mode=display">  P(\overline A) =  P(\overline A | C_1)P(C_1) + P(\overline A | C_2)P(C_2) =   0 * \frac47 + \frac14 * \frac 37 = \frac{3}{28}</script></li></ul></li></ul><h5 id="题目五"><a href="#题目五" class="headerlink" title="题目五"></a>题目五</h5><ul><li>[题目] 设有两箱同种零件，第一箱 50 件，10 件一等品；第二箱 30 件，18 件一等品。先从中随机挑出一箱，再从该箱中先后无放回取出两个零件，求：<ul><li>(1) $P$ = {第一次取到一等品} 的概率</li><li>(2) $Q$ = {在第一次取出的是一等品的条件下，第二次仍取到一等品} 的概率</li></ul></li><li><p>[分析] 从两箱中取得一等品零件的事件，可分为两个阶段：</p><ul><li>(Ⅰ) 选箱子：第一箱记作 $H_1$，第二箱记作 $H_2$。</li><li><p>(Ⅱ) 取零件：第一次取到一等品记作 $B_1$，第二次取到一等品记作  $B_2$。</p><p>  由题意可知， $P(H_1) = P(H_2) = \frac12, P(B_1 | H_1) = \frac{10}{50}, P(B_1 | H_2) = \frac{18}{30}$</p><p>  (1) 由此可得，$P$ = {第一次取到一等品} 的概率为：</p><script type="math/tex; mode=display">  P = P(B_1\Omega) = P(B_1 | H_1)P(H_1) + P(B_1 | H_2)P(H_2) =   \frac{10}{50} * \frac12 + \frac{18}{30} * \frac12 = \frac{4}{10}</script><p>  (2) 依题意，可使用条件概率公式求 $P$ = {在第一次取出是一等品的条件下，第二次仍取到一等品}：</p><script type="math/tex; mode=display">  P(B_2 | B_1) = \frac{P(B_1B_2)}{P(B_1)} =   \frac{ P(B_1B_2 | H_1)P(H_1) + P(B_1B_2 | H_2)P(H_2) }{\frac{4}{10}} \\  = \frac{10}{4} * (      \frac{10}{50} * \frac{9}{49} * \frac12 +       \frac{18}{30} * \frac{17}{29} * \frac12  ) = 0.486</script><p>  当然，也可以参照例题四的思路解题 ( 贝叶斯 )：</p><script type="math/tex; mode=display">  P(H_1 | B_1) = \frac{ P(B_1 | H_1)P(H_1)}{P(B_1)} =   \frac{ \frac{10}{50} * \frac12 }{ \frac{4}{10} } = \frac{1}{4}\\  P(H_1 | B_1) = \frac{ P(B_1 | H_2)P(H_2)}{P(B_1)} =   \frac{ \frac{18}{30} * \frac12 }{ \frac{4}{10} } = \frac34 \\  P(B_2 | B_1) = P(H_1 | B_1) * \frac{9}{49} + P(H_2 | B_1) * \frac{17}{29} = 0.486</script></li></ul></li></ul><h2 id="贰-如何求分布"><a href="#贰-如何求分布" class="headerlink" title="贰 如何求分布"></a>贰 如何求分布</h2><h3 id="基本概念-1"><a href="#基本概念-1" class="headerlink" title="基本概念"></a>基本概念</h3><h4 id="随机变量"><a href="#随机变量" class="headerlink" title="随机变量"></a>随机变量</h4><h4 id="分布函数"><a href="#分布函数" class="headerlink" title="分布函数"></a>分布函数</h4><h5 id="离散型随机变量"><a href="#离散型随机变量" class="headerlink" title="离散型随机变量"></a>离散型随机变量</h5><h5 id="连续型随机变量"><a href="#连续型随机变量" class="headerlink" title="连续型随机变量"></a>连续型随机变量</h5><h3 id="常见一维分布"><a href="#常见一维分布" class="headerlink" title="常见一维分布"></a>常见一维分布</h3><h4 id="两点分布"><a href="#两点分布" class="headerlink" title="两点分布"></a>两点分布</h4><h4 id="二项分布"><a href="#二项分布" class="headerlink" title="二项分布"></a>二项分布</h4><h4 id="几何分布"><a href="#几何分布" class="headerlink" title="几何分布"></a>几何分布</h4><h4 id="超几何分布"><a href="#超几何分布" class="headerlink" title="超几何分布"></a>超几何分布</h4><h4 id="泊松分布"><a href="#泊松分布" class="headerlink" title="泊松分布"></a>泊松分布</h4><h4 id="均匀分布"><a href="#均匀分布" class="headerlink" title="均匀分布"></a>均匀分布</h4><h4 id="指数分布"><a href="#指数分布" class="headerlink" title="指数分布"></a>指数分布</h4><h4 id="正态分布"><a href="#正态分布" class="headerlink" title="正态分布"></a>正态分布</h4><h3 id="一维随机变量及其分布函数"><a href="#一维随机变量及其分布函数" class="headerlink" title="一维随机变量及其分布函数"></a>一维随机变量及其分布函数</h3><h3 id="二维随机变量及其分布函数"><a href="#二维随机变量及其分布函数" class="headerlink" title="二维随机变量及其分布函数"></a>二维随机变量及其分布函数</h3><h2 id="叁-如何求数字特征"><a href="#叁-如何求数字特征" class="headerlink" title="叁 如何求数字特征"></a>叁 如何求数字特征</h2><h3 id="数学期望"><a href="#数学期望" class="headerlink" title="数学期望"></a>数学期望</h3><h3 id="方差"><a href="#方差" class="headerlink" title="方差"></a>方差</h3><h3 id="协方差"><a href="#协方差" class="headerlink" title="协方差"></a>协方差</h3><h3 id="相关系数"><a href="#相关系数" class="headerlink" title="相关系数"></a>相关系数</h3><h2 id="肆-如何使用极限定理"><a href="#肆-如何使用极限定理" class="headerlink" title="肆 如何使用极限定理"></a>肆 如何使用极限定理</h2><h3 id="依概率收敛"><a href="#依概率收敛" class="headerlink" title="依概率收敛"></a>依概率收敛</h3><h3 id="极限定理"><a href="#极限定理" class="headerlink" title="极限定理"></a>极限定理</h3><h4 id="大数定律"><a href="#大数定律" class="headerlink" title="大数定律"></a>大数定律</h4><h4 id="中心极限定理"><a href="#中心极限定理" class="headerlink" title="中心极限定理"></a>中心极限定理</h4><h2 id="伍-如何作估计"><a href="#伍-如何作估计" class="headerlink" title="伍 如何作估计"></a>伍 如何作估计</h2><h3 id="总体与样本"><a href="#总体与样本" class="headerlink" title="总体与样本"></a>总体与样本</h3><h3 id="估计方法"><a href="#估计方法" class="headerlink" title="估计方法"></a>估计方法</h3><h4 id="矩估计"><a href="#矩估计" class="headerlink" title="矩估计"></a>矩估计</h4><h4 id="最大似然估计"><a href="#最大似然估计" class="headerlink" title="最大似然估计"></a>最大似然估计</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本笔记是备战考研时，跟着张宇老师的概率论课程学习整理所得。且输出本笔记的主要目的是快速构建概率的基础知识体系，以便于日后复习查阅和问题探究。或是更具体的应用场景，如 &lt;code&gt;机器学习&lt;/code&gt;、&lt;code&gt;数据挖掘&lt;/code&gt;、&lt;code&gt;经济统计&lt;/code&gt; 等领域，概率论作为这些领域的 &lt;code&gt;先修课程&lt;/code&gt;，理论基础尤为重要。由此，无论是初入门还是温故知新，学习基础学科为必经阶段，不妨选择张宇老师的概率论课程，这不失一种高效的复习方案。&lt;/p&gt;
&lt;p&gt;当然，笔记仅是对知识点的整理和归纳，并不能代表原本知识点的严谨定义。若有更进阶的需求，还请查阅概率论相关教材，或重温课程。&lt;/p&gt;
    
    </summary>
    
      <category term="Reading" scheme="http://www.kofes.cn/categories/Reading/"/>
    
    
      <category term="贝叶斯" scheme="http://www.kofes.cn/tags/%E8%B4%9D%E5%8F%B6%E6%96%AF/"/>
    
      <category term="全概率" scheme="http://www.kofes.cn/tags/%E5%85%A8%E6%A6%82%E7%8E%87/"/>
    
      <category term="分布函数" scheme="http://www.kofes.cn/tags/%E5%88%86%E5%B8%83%E5%87%BD%E6%95%B0/"/>
    
      <category term="数字特征" scheme="http://www.kofes.cn/tags/%E6%95%B0%E5%AD%97%E7%89%B9%E5%BE%81/"/>
    
  </entry>
  
</feed>
