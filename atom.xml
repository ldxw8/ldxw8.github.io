<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>KOFE&#39;S BLOG</title>
  
  <subtitle>Reading / Project / Research</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.kofes.cn/"/>
  <updated>2018-01-21T11:28:55.617Z</updated>
  <id>http://www.kofes.cn/</id>
  
  <author>
    <name>Kofe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于 Hexo 框架在 Github 上搭建博客</title>
    <link href="http://www.kofes.cn/2018/01/Hexo-Installation-Guide/"/>
    <id>http://www.kofes.cn/2018/01/Hexo-Installation-Guide/</id>
    <published>2018-01-19T10:46:03.000Z</published>
    <updated>2018-01-21T11:28:55.617Z</updated>
    
    <content type="html"><![CDATA[<h2 id="壹-序言"><a href="#壹-序言" class="headerlink" title="壹 序言"></a>壹 序言</h2><p>Hexo，一个快速、简洁且高效的博客框架，若以个人博文为主导需求，它的强大毋庸置疑。    </p><p>Hexo 支持 GitHub Flavored Markdown 的所有功能；且基于 Node.Js 所带来的超快生成速度，百页博文秒级渲染；开放性 API 以及丰富的插件等，即功能来得纯粹，不失个性化定制，上手容易且操作便捷。更重要的一点，它是开源的、免费的博客框架，数据保存在本地以及 Github 上，相信在众多博客产品中选择、博弈，相信 Hexo 的表现不会令你失望。</p><p>若想了解详情可访问「<a href="https://hexo.io/" target="_blank" rel="noopener">hexo.io</a>」。</p><a id="more"></a><h2 id="贰-搭建环境"><a href="#贰-搭建环境" class="headerlink" title="贰 搭建环境"></a>贰 搭建环境</h2><ul><li>Mac OS、Windows 环境下的配置流程和步骤大同小异，而搭建环境的大致流程为：  <ul><li>Git 环境配置 ( Windows )</li><li>Node.Js 环境配置</li><li>Github 账号注册和配置</li><li>Hexo 的安装和配置</li></ul></li><li>考虑到是流程操作类的文章，为简单起见，则我们以 MacOS 和 Windows 版本分别说明情况：<ul><li><a href="#MacOS-版本">MacOS 版本</a></li><li><a href="#Windows-版本">Windows 版本</a></li></ul></li></ul><h3 id="MacOS-版本"><a href="#MacOS-版本" class="headerlink" title="MacOS 版本"></a>MacOS 版本</h3><h4 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h4><ul><li>Xcode: Hexo的编译依赖于 Xcode<ul><li>Xcode 可自行到 Apple App Store 下载</li></ul></li><li><p>Node.Js: Hexo 是基于 Node.Js 开发的</p><ul><li><a href="https://nodejs.org/" target="_blank" rel="noopener">官方下载</a></li><li>本地安装，文件包为「Node-Vx.x.x.pkg」</li><li><p>检测是否安装成功，当然返回版本信息即成功安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 终端下输入命令:  </span></span><br><span class="line">node -v  </span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>Github Account ( <strong>已有账号、项目可忽略</strong> )</p><ul><li>注册账号「<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>」</li><li><p>创建代码库  </p><blockquote><p>具体操作步骤:  </p><ol><li>Add ( 右上角「+」图标 ) &gt; New Repository；  </li><li>Repository Name，填写「yourname.github.io」；        </li><li>Repository Description，填写「简单描述」；</li></ol></blockquote></li><li><p>配置代码库</p><blockquote><p>具体操作步骤:  </p><ol><li>进入项目「yourname.github.io」；  </li><li>Settings &gt; GitHub Pages，开启「GH-Pages」功能；  </li><li>点击「Launch Automatic Page Generator」；</li></ol><p>第三步说明:<br>Github 将会自动替你创建出一个 GH-Pages 的页面。若配置没有问题，约15分钟后，yourname.github.io 就可以正常访问了，配置结束。</p></blockquote></li></ul></li></ul><h4 id="安装-HEXO"><a href="#安装-HEXO" class="headerlink" title="安装 HEXO"></a>安装 HEXO</h4><h5 id="安装-HEXO-1"><a href="#安装-HEXO-1" class="headerlink" title="安装 HEXO"></a>安装 HEXO</h5><ul><li><p>本地选择安装目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> your-hexo-site</span><br></pre></td></tr></table></figure></li><li><p>在线安装 HEXO ( <a href="http://npm.taobao.org/" target="_blank" rel="noopener">NPM淘宝源</a> )</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g  </span><br><span class="line">hexo init  </span><br><span class="line">hexo install</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>检测是否安装成功，当然返回版本信息即成功安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure></li></ul><h5 id="运作-HEXO"><a href="#运作-HEXO" class="headerlink" title="运作 HEXO"></a>运作 HEXO</h5><ul><li><p>本地运作 HEXO</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server<span class="comment"># 或简写 hexo s</span></span><br></pre></td></tr></table></figure></li><li><p>当终端提示以下信息，则本地配置工作基本完成。</p><blockquote><p>Hexo is running at <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>. Press Ctrl+C to stop.</p></blockquote></li></ul><h5 id="使用-HEXO"><a href="#使用-HEXO" class="headerlink" title="使用 HEXO"></a>使用 HEXO</h5><blockquote><p>[注意] 此项操作，需要确保在 Hexo 安装目录下执行。</p></blockquote><ul><li><p>新建一篇博文 ( 当然，更新过往的文章只需修改「Hexo &gt; Source &gt; _Posts」目录下相应的 MarkDown 文件 )</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">"Article Title"</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>生成博文 ( 生成静态网页 )</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure></li></ul><h5 id="部署至-GitHub"><a href="#部署至-GitHub" class="headerlink" title="部署至 GitHub"></a>部署至 GitHub</h5><ul><li><p>部署至 Git 的准备工作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在部署前，还需要安装「Git部署插件」:  </span></span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 若没有安装该插件，会出现情况：</span></span><br><span class="line"><span class="comment"># deloyer not found:git</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>再者，与 Github 连接前需要获得授权，不然会出现以下情况 ( 本机没有配置 Public Key ):</p><blockquote><p>Permission denied (publickey).<br>fatal: Could not read from remote repository.<br>Please make sure you have the correct access rights and the repository exists.</p></blockquote></li><li><p>配置「SSH KEY / Public KEY」</p><blockquote><p>[注意] 若之前机器上配置了 Git 的信息，请跳过该步骤。</p></blockquote>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 配置 Git 的 UserName 和 Email </span></span><br><span class="line"><span class="comment"># “YourAnonymousName"，可以替换成自己的用户名   </span></span><br><span class="line">git config --global user.name <span class="string">"YourAnonymousName"</span>  </span><br><span class="line"><span class="comment"># "UserName@xxx.com"，替换成自己的邮箱  </span></span><br><span class="line">git config --global user.email <span class="string">"UserName@xxx.com"</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 检查是否已经有 SSH KEY </span></span><br><span class="line"><span class="comment"># Step01. 列出该目录下的文件；</span></span><br><span class="line"><span class="comment"># Step02. 看是否存在「id_isa」和「id_isa.pub」文件；</span></span><br><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">ls</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Step03. 若存在则跳过，没有则执行此步骤「生成密钥」.</span></span><br><span class="line"><span class="comment"># 邮箱「UserName@xxx.com」替换成自己的邮箱</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"UserName@xxx.com"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 登陆 Github, 添加 SSH KEY</span></span><br><span class="line"><span class="comment"># Step01. Avatar(头像) &gt; Settings &gt; Personal Settings &gt; SSH and GPG keys； </span></span><br><span class="line"><span class="comment"># Step02. New SSH KEY，把「id_isa.pub」的密钥粘贴过去即可.  </span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 4. 测试是否配置成功</span></span><br><span class="line">ssh -T git@github.com</span><br><span class="line"><span class="comment"># 提示「Hi YourName! You've successfully authenticated, but GitHub does not provide shell. access.」即成功配置。</span></span><br></pre></td></tr></table></figure></li><li><p>配置「_config.yml」文件  </p><ul><li><p>在 Hexo 安装目录下找到 _config.yml 文件，如「~/你的安装目录/Hexo/_config.yml」。找到「deploy」字段，修改配置。</p><blockquote><p>deploy:<br>type: git<br>repo: <a href="https://github.com/yourname/yourname.github.io.git" target="_blank" rel="noopener">https://github.com/yourname/yourname.github.io.git</a><br>branch: master</p></blockquote></li><li><p>注意: 冒号后面含一个空格；使用 Github 不用 branch 字段；若使用多个 deployer，则有：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">- <span class="built_in">type</span>: git</span><br><span class="line">repo:</span><br><span class="line">- <span class="built_in">type</span>: heroku </span><br><span class="line">repo:</span><br></pre></td></tr></table></figure></li></ul></li><li><p>部署至 Git</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy  </span><br><span class="line">hexo d -g<span class="comment"># 即在部署之前先生成</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="Windows-版本"><a href="#Windows-版本" class="headerlink" title="Windows 版本"></a>Windows 版本</h3><h4 id="配置环境-1"><a href="#配置环境-1" class="headerlink" title="配置环境"></a>配置环境</h4><blockquote><p>Github 账号注册和配置和 Hexo 的安装和配置，在 Windows 与 MacOS 上是通用的。因此，在 Windows 版本中，主要阐述 Node.Js和 Git 的安装和配置即可。</p></blockquote><ul><li><p>Node.Js 的安装和准备</p><ul><li>下载并安装「<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.Js for Windows x86/x64 bit</a>」</li><li><p>检测是否安装成功，当然返回版本信息即成功安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v  </span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>Git 的安装和准备</p><ul><li>下载并安装「<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">Git for Windows x86/x64 bit</a>」</li><li><p>检测是否安装成功，当然返回版本信息即成功安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="叁-优化拓展"><a href="#叁-优化拓展" class="headerlink" title="叁 优化拓展"></a>叁 优化拓展</h2><p>至此，Hexo 的安装以及 GitHub 的配置工作暂告一段落。能正常运行使用 Hexo 是没问题的，而下面的章节则是对 Hexo 的扩展和个性化定制，根据自己的需求挑选阅读、实践。</p><h3 id="套用一款主题"><a href="#套用一款主题" class="headerlink" title="套用一款主题"></a>套用一款主题</h3><p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。</p><p>在 Hexo 中有两份主要的配置文件，其名称都是「_config.yml」。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。</p><p>为了描述方便，在以下说明中，将前者称为「<code>站点配置文件</code>」， 后者称为「<code>主题配置文件</code>」。</p><p>具体以 NexT\(^[2]\) 为例说明，安装步骤如下。</p><h4 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h4><p>如果你熟悉 Git， 建议你使用<code>克隆最新版本</code>的方式，之后的更新可以通过 git pull 来快速更新， 而不用再次下载压缩包替换。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 克隆最新版本</span></span><br><span class="line"><span class="built_in">cd</span> your-hexo-site  </span><br><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next. themes/next</span><br><span class="line"></span><br><span class="line"><span class="comment"># 快速更新</span></span><br><span class="line"><span class="built_in">cd</span> themes/next</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h4 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h4><ul><li><p>与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 站点配置文件， 找到 theme 字段，并将其值更改为 next。</p><blockquote><p>theme: next</p></blockquote></li><li><p>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure></li></ul><h4 id="主题设定"><a href="#主题设定" class="headerlink" title="主题设定"></a>主题设定</h4><ul><li><p>选择 Scheme<br>Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：</p><ul><li>Muse - 默认 Scheme，黑白主调，大量留白  </li><li>Mist - Muse 的紧凑版本，整洁有序的单栏外观  </li><li><p>Pisces - 双栏 Scheme，小家碧玉似的清新  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line">scheme: Pisces</span><br></pre></td></tr></table></figure><blockquote><p>Scheme 的切换通过更改<code>主题配置文件</code>，搜索「scheme」关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释 # 去除即可。</p></blockquote></li></ul></li><li><p>设置语言<br>编辑<code>站点配置文件</code>， 将「language」设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下 ( 更多请语言配置请参考下述表格 )：</p><blockquote><p>language: zh-Hans  </p></blockquote><p>  | 语言            | 代码    | 设定示例|<br>  |:———–|:—–|:——-|<br>  | English        | en        | language: en |<br>  | 简体中文        | zh-Hans    | language: zh-Hans |<br>  | Français    | fr-FR    | language: fr-FR |<br>  | Português    | pt        | language: pt or pt-BR |<br>  | 繁體中文        | zh-hk    | language: zh-hk |<br>  | Русский        | язык    ru    | language: ru |<br>  | Deutsch        | de        | language: de |<br>  | 日本語        | ja        | language: ja |<br>  | Indonesian    | id        | language: id |<br>  | Korean        | ko        | language: ko |</p></li></ul><h3 id="揽收实用插件"><a href="#揽收实用插件" class="headerlink" title="揽收实用插件"></a>揽收实用插件</h3><h2 id="肆-参考资料"><a href="#肆-参考资料" class="headerlink" title="肆 参考资料"></a>肆 参考资料</h2><p><a href="https://hexo.io/docs/" target="_blank" rel="noopener">[1] HexoJs.使用文档.2018</a><br><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">[2] NexT.使用文档.2018</a><br><a href="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="noopener">[3] 徐俊.手把手教你搭建属于自己的博客.CSDN.2017</a>  </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;壹-序言&quot;&gt;&lt;a href=&quot;#壹-序言&quot; class=&quot;headerlink&quot; title=&quot;壹 序言&quot;&gt;&lt;/a&gt;壹 序言&lt;/h2&gt;&lt;p&gt;Hexo，一个快速、简洁且高效的博客框架，若以个人博文为主导需求，它的强大毋庸置疑。    &lt;/p&gt;
&lt;p&gt;Hexo 支持 GitHub Flavored Markdown 的所有功能；且基于 Node.Js 所带来的超快生成速度，百页博文秒级渲染；开放性 API 以及丰富的插件等，即功能来得纯粹，不失个性化定制，上手容易且操作便捷。更重要的一点，它是开源的、免费的博客框架，数据保存在本地以及 Github 上，相信在众多博客产品中选择、博弈，相信 Hexo 的表现不会令你失望。&lt;/p&gt;
&lt;p&gt;若想了解详情可访问「&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo.io&lt;/a&gt;」。&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://www.kofes.cn/tags/hexo/"/>
    
  </entry>
  
</feed>
