[{"title":"基于 Hexo 框架在 Github 上搭建博客","url":"%2F2018%2F01%2FHexo-Installation-Guide%2F","content":"\n## 壹 序言\n\nHexo\\\\(^{[1]}\\\\)，一个快速、简洁且高效的博客框架，若以个人博文为主导需求，它的强大毋庸置疑。    \n\nHexo 支持 GitHub Flavored Markdown 的所有功能；且基于 Node.Js 所带来的超快生成速度，百页博文秒级渲染；开放性 API 以及丰富的插件等，即功能来得纯粹，不失个性化定制，上手容易且操作便捷。更重要的一点，它是开源的、免费的博客框架，数据保存在本地以及 Github 上，相信在众多博客产品中选择、博弈，相信 Hexo 的表现不会令你失望。\n\n若想了解详情可访问「[hexo.io](https://hexo.io/)」。\n\n<!-- more -->\n\n## 贰 搭建环境\n\n- Mac OS、Windows 环境下的配置流程和步骤大同小异，而搭建环境的大致流程为：  \n - Git 环境配置 ( Windows )\n - Node.Js 环境配置\n - Github 账号注册和配置\n - Hexo 的安装和配置\n- 考虑到是流程操作类的文章，为简单起见，则我们以 MacOS 和 Windows 版本分别说明情况：\n - [MacOS 版本](#MacOS-版本)\n - [Windows 版本](#Windows-版本)\n\n\n### MacOS 版本\n#### 配置环境\n\n-  Xcode: Hexo的编译依赖于 Xcode\n - Xcode 可自行到 Apple App Store 下载\n-  Node.Js: Hexo 是基于 Node.Js 开发的\n - [官方下载](https://nodejs.org/)\n - 本地安装，文件包为「Node-Vx.x.x.pkg」\n - 检测是否安装成功，当然返回版本信息即成功安装\n\n\t```bash\n\t# 终端下输入命令:  \n\tnode -v  \n\tnpm -v\n\t```\n \n- Github Account ( **已有账号、项目可忽略** )\n - 注册账号「[GitHub](https://github.com/)」\n - 创建代码库  \n \n\t> 具体操作步骤:  \n\t> 1. Add ( 右上角「+」图标 ) > New Repository；  \n\t> 2. Repository Name，填写「yourname.github.io」；        \n\t> 3. Repository Description，填写「简单描述」；\n \n - 配置代码库\n \n\t> 具体操作步骤:  \n\t> 1. 进入项目「yourname.github.io」；  \n\t> 2. Settings > GitHub Pages，开启「GH-Pages」功能；  \n\t> 3. 点击「Launch Automatic Page Generator」；\n\t> \n\t> 第三步说明:  \n\t> Github 将会自动替你创建出一个 GH-Pages 的页面。若配置没有问题，约15分钟后，yourname.github.io 就可以正常访问了，配置结束。\n\t\n#### 安装 HEXO\n##### 安装 HEXO\n- 本地选择安装目录\n \n ```bash\n cd your-hexo-site \n ```\n\n- 在线安装 HEXO ( [NPM淘宝源](http://npm.taobao.org/) )\n\n ```bash\n npm install hexo-cli -g  \n hexo init  \n hexo install\n ```\n\t\t\n- 检测是否安装成功，当然返回版本信息即成功安装\n \n ```bash\n hexo -v\n ```\n \n##### 运作 HEXO \n- 本地运作 HEXO\n\n ```bash\n hexo server\t# 或简写 hexo s\n ```\n\n- 当终端提示以下信息，则本地配置工作基本完成。\n\n\t> Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.\n\n##### 使用 HEXO\n> [注意] 此项操作，需要确保在 Hexo 安装目录下执行。\n\n- 新建一篇博文 ( 当然，更新过往的文章只需修改「Hexo > Source > _Posts」目录下相应的 MarkDown 文件 )\n\n ```bash\n hexo new post \"Article Title\"\n ```\n\t\n- 生成博文 ( 生成静态网页 )\n \n ```bash\n hexo generate\n ```\n\n##### 部署至 GitHub\n- 部署至 Git 的准备工作\n \n ```bash\n # 在部署前，还需要安装「Git部署插件」:  \n npm install hexo-deployer-git --save\n \n # 若没有安装该插件，会出现情况：\n # deloyer not found:git\n ```\n \n- 再者，与 Github 连接前需要获得授权，不然会出现以下情况 ( 本机没有配置 Public Key ):\n     \n\t> Permission denied (publickey).  \n\t> fatal: Could not read from remote repository.  \n\t> Please make sure you have the correct access rights and the repository exists.\n\t\n- 配置「SSH KEY / Public KEY」\n\n\t> [注意] 若之前机器上配置了 Git 的信息，请跳过该步骤。\n   \n\t```bash\n\t# 1. 配置 Git 的 UserName 和 Email \n\t# “YourAnonymousName\"，可以替换成自己的用户名   \n\tgit config --global user.name \"YourAnonymousName\"  \n\t# \"UserName@xxx.com\"，替换成自己的邮箱  \n\tgit config --global user.email \"UserName@xxx.com\"  \n\t\n\t# 2. 检查是否已经有 SSH KEY\t \n\t# Step01. 列出该目录下的文件；\n\t# Step02. 看是否存在「id_isa」和「id_isa.pub」文件；\n\tcd ~/.ssh\n\tls\n\t \n\t# Step03. 若存在则跳过，没有则执行此步骤「生成密钥」.\n\t# 邮箱「UserName@xxx.com」替换成自己的邮箱\n\tssh-keygen -t rsa -C \"UserName@xxx.com\"\n\t\t\n\t# 3. 登陆 Github, 添加 SSH KEY\n\t# Step01. Avatar(头像) > Settings > Personal Settings > SSH and GPG keys； \n\t# Step02. New SSH KEY，把「id_isa.pub」的密钥粘贴过去即可.  \n\t \n\t# 4. 测试是否配置成功\t\n\tssh -T git@github.com\n\t# 提示「Hi YourName! You've successfully authenticated, but GitHub does not provide shell. access.」即成功配置。\n\t```\n\n- 配置「_config.yml」文件  \n\n - 在 Hexo 安装目录下找到 _config.yml 文件，如「~/你的安装目录/Hexo/_config.yml」。找到「deploy」字段，修改配置。\n\t\t\n\t> deploy: \n\t> type: git \n\t> repo: https://github.com/yourname/yourname.github.io.git\n\t> branch: master\n\n - 注意: 冒号后面含一个空格；使用 Github 不用 branch 字段；若使用多个 deployer，则有：\n\t\n\t```bash\n\tdeploy:\n\t- type: git\n\trepo:\n\t- type: heroku \n\trepo:\n\t```\n\n- 部署至 Git\n \n\t```bash\n\thexo deploy\t  \n\thexo d -g\t# 即在部署之前先生成\n\t```\n\n### Windows 版本\n#### 配置环境\n\n> Github 账号注册和配置和 Hexo 的安装和配置，在 Windows 与 MacOS 上是通用的。因此，在 Windows 版本中，主要阐述 Node.Js和 Git 的安装和配置即可。\n\n- Node.Js 的安装和准备\n - 下载并安装「[Node.Js for Windows x86/x64 bit](https://nodejs.org/en/download/)」\n - 检测是否安装成功，当然返回版本信息即成功安装\n\n\t```bash  \n\tnode -v  \n\tnpm -v\n\t```\n\t\n- Git 的安装和准备\n - 下载并安装「[Git for Windows x86/x64 bit](https://git-scm.com/download/win)」\n - 检测是否安装成功，当然返回版本信息即成功安装\n\n\t```bash \n\tgit --version\n\t```\n\n## 叁 优化拓展\t\n至此，Hexo 的安装以及 GitHub 的配置工作暂告一段落。能正常运行使用 Hexo 是没问题的，而下面的章节则是对 Hexo 的扩展和个性化定制，根据自己的需求挑选阅读、实践。\n\n### 套用一款主题\n\nHexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。\n\n在 Hexo 中有两份主要的配置文件，其名称都是「_config.yml」。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。\n\n为了描述方便，在以下说明中，将前者称为「`站点配置文件`」， 后者称为「`主题配置文件`」。\n\n具体以 NexT\\\\(^{[2]}\\\\) 为例说明，安装步骤如下。\n\n#### 下载主题  \n\n如果你熟悉 Git， 建议你使用`克隆最新版本`的方式，之后的更新可以通过 git pull 来快速更新， 而不用再次下载压缩包替换。\n\n```bash\n# 克隆最新版本\ncd your-hexo-site  \ngit clone https://github.com/iissnan/hexo-theme-next. themes/next\n\n# 快速更新\ncd themes/next\ngit pull\n```\n\n#### 启用主题  \n- 与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 站点配置文件， 找到 theme 字段，并将其值更改为 next。\n \n\t> theme: next\n\n- 到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。\n \n\t```bash\n \thexo clean\n\t```\n\t\n#### 主题设定\n- 选择 Scheme  \n Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：\n \n - Muse - 默认 Scheme，黑白主调，大量留白  \n - Mist - Muse 的紧凑版本，整洁有序的单栏外观  \n - Pisces - 双栏 Scheme，小家碧玉似的清新  \n\n\t```bash\n\t#scheme: Muse\n\t#scheme: Mist\n\tscheme: Pisces\n\t```\n\n\t> Scheme 的切换通过更改`主题配置文件`，搜索「scheme」关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释 # 去除即可。\n\t\n- 设置语言\n 编辑`站点配置文件`， 将「language」设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下 ( 更多请语言配置请参考下述表格 )：\n \n\t> language: zh-Hans  \n\n\t| 语言 | 代码 | 设定示例 |\n\t|:---|:---|:---|\n\t| English\t\t| en\t\t| language: en |\n\t| 简体中文\t\t| zh-Hans\t| language: zh-Hans |\n\t| Français\t| fr-FR\t| language: fr-FR |\n\t| Português\t| pt\t\t| language: pt or pt-BR |\n\t| 繁體中文\t\t| zh-hk\t| language: zh-hk |\n\t| Русский\t\t| язык\tru\t| language: ru |\n\t| Deutsch\t\t| de\t\t| language: de |\n\t| 日本語\t\t| ja\t\t| language: ja |\n\t| Indonesian\t| id\t\t| language: id |\n\t| Korean\t\t| ko\t\t| language: ko |\n\n\t\n### 揽收实用插件\n\n## 肆 参考资料\n\n[[1] HexoJs.使用文档.2018](https://hexo.io/docs/)  \n[[2] NexT.使用文档.2018](http://theme-next.iissnan.com/getting-started.html)  \n[[3] 徐俊.手把手教你搭建属于自己的博客.CSDN.2017](http://blog.csdn.net/gdutxiaoxu/article/details/53576018)  ","tags":["hexo"]}]